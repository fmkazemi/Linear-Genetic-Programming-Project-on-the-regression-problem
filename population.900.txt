Program 0:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 1:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 2:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 3:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 4:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 5:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 6:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 7:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 8:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 9:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.279297;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 10:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 11:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 12:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 13:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 14:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 15:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 16:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 17:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 18:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = 0.537109 * r[1];
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 19:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(r[2] < 0.949097)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 20:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 21:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 22:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 23:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[3] / r[4];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 24:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 25:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 26:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//if(cf[0] < cf[0])
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 27:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = r[3] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 28:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 29:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 30:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - 0.0268555;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 31:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(-0.752625 < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 32:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[5] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 33:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = r[0] / 0.579468;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 34:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
}

Program 35:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	r[1] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 36:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 37:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[1] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 38:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.304688 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 39:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] / r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//if(cf[0] < cf[0])
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 40:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = -0.243408 + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 41:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[0] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 42:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = 0.141418 + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 43:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = 0.130981 + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 44:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] / -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 45:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = r[2] + -0.184692;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 46:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 47:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - 0.0268555;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = 0.138306 + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 48:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 49:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[0] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 50:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[1] = cf[0] + r[2];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 51:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[3] / r[4];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] + cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 52:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 53:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[1] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 54:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = -0.552368 * r[4];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 55:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 56:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * 0.0651245;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 57:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 58:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 59:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	r[1] = cf[0] + r[4];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 60:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[5];
	r[5] = r[4] - -0.539978;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 61:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[1] = r[2] / r[2];
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(-0.752625 < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 62:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	r[4] = cf[0] + r[3];
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 63:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[3] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(-0.752625 < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 64:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(r[2] < 0.949097)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < cf[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 65:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 66:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	r[3] = cf[0] * 0.418152;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 67:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.998291)
	r[4] = r[4] - 0.962097;
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * 0.0651245;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 68:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(0.488159 < r[4])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 69:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = r[2] + -0.184692;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] + -0.0199585;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 70:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = r[2] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 71:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[2] = r[1] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 72:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = -0.561157 - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 73:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] + -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 74:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - cf[0];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.304688 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 75:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = -0.371826 * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 76:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[2] = 0.658264 - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = 0.537109 * r[1];
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 77:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + r[4];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 78:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] / -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 79:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 80:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 81:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[3] = r[0] + 0.715393;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 82:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - 0.502869;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 83:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = -0.595642 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 84:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + r[4];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 85:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = -0.243408 + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] * 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 86:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 87:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[2] - cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 88:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 89:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = r[0] / 0.579468;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 * -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 90:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[0] = cf[0] / r[4];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[3] / r[4];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] + cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 91:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.279297;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 92:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * 0.0651245;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 93:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = r[2] - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 94:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(r[4] < r[2])
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 95:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < -0.929688)
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.279297;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 96:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = cf[0] * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = 0.141418 + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 97:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - -0.0355835;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[2] - cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 98:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 99:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = r[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[5] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 100:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[3] = cf[0] * -0.363953;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = 0.537109 * r[1];
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 101:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] + r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
}

Program 102:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + 0.428345;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 103:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[5] = -0.815125 + 0.484436;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 104:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	r[4] = cf[0] + r[3];
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[3] = -0.405273 + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 105:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[1] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 106:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[4] = r[4] / r[2];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 107:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[0] = -0.471313 - -0.508179;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 108:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[4] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 109:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 110:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = r[5] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - 0.0268555;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = 0.138306 + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 111:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] * cf[0];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + r[4];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 112:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[1] / r[3];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[3] / r[4];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 113:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 114:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[3] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 115:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * 0.802612;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	r[1] = cf[0] + r[4];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 116:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = r[0] / 0.579468;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 117:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[1] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 118:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	r[4] = cf[0] + r[3];
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 119:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[2] = r[3] - r[4];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 120:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = r[2] + -0.184692;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] + -0.0199585;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//if(cf[0] < -0.13739)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 121:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = 0.245117 - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	r[3] = cf[0] * 0.418152;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 122:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[5] = 0.37561 - r[3];
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	r[1] = cf[0] + r[4];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 123:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = 0.824219 / r[2];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 124:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 125:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[3] = r[0] * 0.715393;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 126:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = 0.347046 - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = -0.595642 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 127:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + r[4];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 128:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.304688 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + r[2];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 129:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.998291)
	r[4] = r[4] - 0.962097;
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * 0.0651245;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = -0.848633 - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 130:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < r[1])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 131:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(r[5] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 132:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//if(-0.256836 < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 133:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(0.942566 < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[2] = r[1] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 134:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.998291)
	r[4] = r[4] - 0.962097;
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * 0.0651245;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 135:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[4] + r[2];
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = r[2] + -0.184692;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 136:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	if(r[3] < 0.569702)
	r[0] = cf[0] - cf[0];
	//r[4] = -0.243408 + cf[0];
	r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	if(0.72168 < -0.13739)
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] * 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 137:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[3] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 138:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[5] = cf[0] + -0.817688;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * 0.0651245;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 139:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 + r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = 0.130981 + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 140:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//if(cf[0] < cf[0])
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 141:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * cf[0];
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 142:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(cf[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[1] = cf[0] + r[2];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 143:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//if(cf[0] < r[2])
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.279297;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 144:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[5] = r[5] / cf[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = -0.243408 + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] * 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 145:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] * 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = r[0] / 0.579468;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 146:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = cf[0] - r[1];
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = -0.595642 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 147:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = 0.928894 + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(r[4] < r[2])
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 148:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * cf[0];
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(0.488159 < r[4])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 149:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < -0.1745)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 150:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = r[1] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 151:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(0.03302 < -0.564758)
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[3] / r[4];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 152:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = r[2] - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[1] = cf[0] - r[3];
}

Program 153:
// Fitness Information: 0.829891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[1] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 154:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//if(0.54187 < r[1])
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = r[4] - r[2];
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 155:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[2] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 156:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[2] = cf[0] + cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < cf[0])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(cf[0] < r[3])
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[5] = -0.827576 / cf[0];
	r[1] = r[3] / r[5];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 157:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[1] < -0.0890503)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(cf[0] < 0.0959473)
	//r[4] = cf[0] - 0.159119;
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 158:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[2] = cf[0] + cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < cf[0])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[5] = -0.827576 / cf[0];
	r[1] = r[3] / r[5];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[1] = r[3] * cf[0];
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 159:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = r[2] * r[1];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.546204 / cf[0];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = cf[0] + r[3];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[1] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = -0.748413 - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[1] = r[2] - -0.236572;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 160:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[0] = -0.0266113 * cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 161:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[0] = 0.401001 - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / r[5];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * r[0];
	//r[2] = r[2] - r[3];
	//r[0] = 0.582764 / r[5];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[4])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[1] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 162:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[2] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = 0.861694 - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 163:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.193848 < r[1])
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 164:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[3] = -0.191589 / r[3];
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	r[2] = cf[0] + r[4];
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * cf[0];
	//r[2] = r[0] * 0.358704;
	//if(-0.100464 < 0.883606)
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(cf[0] < cf[0])
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = 0.765015 - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 165:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] * r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 166:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[2] = cf[0] + cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < cf[0])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[5] = -0.827576 / cf[0];
	r[1] = r[3] / r[5];
	//r[4] = cf[0] / 0.363464;
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 167:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[3] = -0.191589 / r[3];
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	r[2] = cf[0] + r[4];
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//if(cf[0] < r[0])
	//r[0] = 0.332947 + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(-0.100464 < 0.883606)
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(cf[0] < cf[0])
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = 0.765015 - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 168:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[4] < -0.201355)
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 * -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 169:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//if(0.0165405 < 0.929871)
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[3] = -0.452209 / -0.0125122;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 170:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 171:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[3];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[5] = cf[0] * 0.441528;
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = r[2] - -0.324463;
	//r[4] = r[4] + cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 / 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 + -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[5] = r[0] / r[0];
	r[3] = cf[0] / r[0];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < 0.868286)
	//r[4] = cf[0] + cf[0];
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 172:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[1] = r[2] - cf[0];
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[2];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < cf[0])
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 173:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = r[3] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 174:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.434204 * r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//if(-0.271118 < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 175:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = cf[0] + cf[0];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[3] = -0.00842285 + cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 176:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * r[3];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 177:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 / 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = 0.861694 - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[2] = cf[0] / -0.375244;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 178:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//if(-0.647949 < r[3])
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = -0.337952 * r[1];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[1] = cf[0] + r[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 179:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[0] = r[4] - r[1];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 180:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[0] = -0.643066 + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < -0.532043)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 181:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[2] = -0.279724 * r[5];
}

Program 182:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[4] < -0.992615)
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//if(r[2] < cf[0])
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = 0.420898 + r[3];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 183:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[0] = cf[0] / cf[0];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[3] = -0.452209 / -0.0125122;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 184:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] - -0.0656128;
	//if(r[2] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[2] = r[4] * r[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.238892;
	r[4] = r[5] - 0.159119;
	r[3] = r[1] / cf[0];
}

Program 185:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < r[4])
	//r[0] = cf[0] / cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = r[4] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[4] = r[1] - cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[5] = 0.245911 + -0.846497;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 * r[1];
	//if(0.76886 < r[5])
	//r[0] = -0.507446 - 0.126587;
	//if(r[1] < 0.341736)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + r[1];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 186:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//if(r[0] < r[3])
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[5] = cf[0] + cf[0];
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[3] = -0.333801 / -0.0404053;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[0] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] / -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 187:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(cf[0] < cf[0])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[3] < r[3])
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 188:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	if(r[4] < -0.196594)
	r[1] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[1] = -0.405396 - cf[0];
	r[5] = cf[0] - r[3];
}

Program 189:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + -0.87561;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = -0.806702 - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.915955;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(r[0] < 0.966187)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 190:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[0] = 0.223145 + r[1];
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[5] = -0.800049 + cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 191:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[5] = cf[0] * 0.933289;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 192:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[3] = -0.653809 - cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[0] < r[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[0] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[3] = r[5] + 0.337524;
}

Program 193:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < r[2])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[0] = 0.401001 - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * r[0];
	//r[2] = r[2] - r[3];
	//r[0] = 0.582764 / r[5];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[4])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[1] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 194:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = 0.861694 - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[2] = cf[0] / -0.375244;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 195:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[1] = cf[0] - cf[0];
	//if(r[2] < r[4])
	//if(-0.484131 < r[5])
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(r[4] < -0.713501)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[1] = 0.744385 / r[2];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 196:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] - cf[0];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[1] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 197:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = -0.684204 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = -0.582397 / r[2];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 198:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[3] = -0.673645 - cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	if(-0.510498 < 0.983032)
	if(0.635925 < r[5])
	if(0.964172 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[3] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 199:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//r[2] = r[2] * cf[0];
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 200:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[0] = 0.401001 - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = 0.582764 / r[5];
	//r[1] = 0.143738 - r[1];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[4])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < cf[0])
	r[2] = r[5] + cf[0];
	r[1] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 201:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[2] = cf[0] + cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < cf[0])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - -0.19519;
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[5] = -0.827576 / cf[0];
	r[1] = r[3] / r[5];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 202:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < 0.0568237)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] * cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[4] + r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 203:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 204:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] / 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 205:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[4] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] - cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = -0.534668 * cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 206:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[5] = -0.418823 * 0.66687;
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - 0.289246;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 207:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[3] = -0.191589 / r[3];
	//r[0] = 0.223145 + r[1];
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[5] = -0.800049 + cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	if(r[2] < r[3])
	r[1] = -0.255798 / -0.744446;
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 208:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = 0.861694 - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] * 0.670044;
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 209:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[0] + r[4];
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 210:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = 0.301392 - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 211:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(cf[0] < cf[0])
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[0] = 0.401001 - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * r[0];
	//r[2] = r[2] - r[3];
	//r[0] = 0.582764 / r[5];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[4])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[1] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 212:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.851563 - r[5];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = cf[0] / cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / r[1];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[1] = 0.71106 / cf[0];
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 213:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[1] = cf[0] - cf[0];
	//if(r[2] < r[4])
	//if(-0.484131 < r[5])
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[1] = 0.744385 / r[2];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = -0.105835 - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 214:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] - -0.0656128;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[2] = r[2] * -0.64679;
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//if(cf[0] < cf[0])
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = -0.61676 - cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 215:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[0] = -0.213806 * 0.949585;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < cf[0])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 216:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[1] = 0.621582 - r[1];
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[1] = r[5] / r[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[1] = r[2] + 0.993103;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 217:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = cf[0] / r[0];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = 0.537598 * 0.0425415;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[5] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 218:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[5] = 0.482544 + 0.427246;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[5] = 0.695313 - cf[0];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[4] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 219:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[4] < -0.201355)
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(r[5] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 220:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 221:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = r[4] + r[2];
	//r[4] = r[2] - r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < r[4])
	//r[0] = cf[0] / cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = r[4] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[5] = 0.245911 + -0.846497;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 * r[1];
	//if(0.76886 < r[5])
	//r[0] = -0.507446 - 0.126587;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + r[1];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	r[2] = r[4] + r[3];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 222:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[1] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 223:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = r[2] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 224:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 225:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(0.781128 < r[4])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[4] = r[5] * r[2];
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[2] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[0] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 226:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[5] = r[5] + cf[0];
	//r[0] = r[1] + 0.643982;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = cf[0] / cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 227:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 228:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 229:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = 0.744934 / r[1];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = cf[0] - r[4];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + r[1];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 230:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[0] - r[0];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(-0.328125 < r[0])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 231:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < r[4])
	//r[0] = cf[0] / cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = r[4] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[4] = r[1] - cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[5] = 0.245911 + -0.846497;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 * r[1];
	//if(0.76886 < r[5])
	//r[0] = -0.507446 - 0.126587;
	//if(r[1] < 0.0737305)
	//r[3] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + r[1];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 232:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[0] < cf[0])
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = cf[0] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[3] = r[3] + -0.0452271;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//if(-0.635742 < r[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 233:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	if(r[4] < -0.196594)
	r[1] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] - cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 234:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[0] = cf[0] * r[4];
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.689636;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 235:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = r[0] * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[1] = 0.257324 / -0.910645;
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[1] = r[2] / r[3];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 236:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < r[4])
	//r[0] = cf[0] / cf[0];
	//if(cf[0] < r[1])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = r[4] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[5] = 0.245911 + -0.846497;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[0] = -0.507446 - 0.126587;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + r[1];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - cf[0];
	r[5] = -0.00250244 - r[3];
}

Program 237:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[4] = 0.820496 + r[4];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < -0.773743)
	//r[5] = r[4] - -0.819153;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 238:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 239:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = cf[0] - r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//if(r[2] < cf[0])
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[1] = -0.875488 - cf[0];
	//r[1] = r[3] / cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + r[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - cf[0];
	r[3] = cf[0] + cf[0];
}

Program 240:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = r[5] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = r[4] * cf[0];
	//if(r[2] < cf[0])
	//r[4] = -0.0257568 * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 241:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[0] = -0.643066 + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] * r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 242:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[3] = 0.2995 + -0.0115967;
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(0.808044 < r[1])
	//if(0.76886 < r[1])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 243:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(r[2] < 0.865173)
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 244:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[2] = cf[0] * -0.752502;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 245:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(0.918152 < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 246:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[3] = r[3] / r[2];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 247:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = cf[0] + r[2];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 248:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = 0.752625 - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 249:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[1];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] + -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 250:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[3] = -0.960571 - -0.143799;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 251:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] / cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] * 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[1] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[5] = -0.815186 / 0.225647;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 252:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = -0.806702 - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(cf[0] < r[3])
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.915955;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(r[0] < 0.966187)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 253:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] * r[3];
}

Program 254:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[0] = -0.643066 + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < r[3])
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 255:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[5];
	r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = -0.776001 + 0.490051;
	r[5] = cf[0] - r[3];
}

Program 256:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = -0.710388 * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 257:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = cf[0] / r[0];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = 0.537598 * 0.0425415;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//r[3] = r[2] / cf[0];
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 258:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] / cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 259:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[3] = -0.673645 - cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[0] = r[3] + -0.606934;
	//r[3] = r[2] + 0.797913;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + -0.869629;
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 260:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - cf[0];
	//if(cf[0] < 0.569702)
	//if(cf[0] < 0.459656)
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - cf[0];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = -0.253967 / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = -0.913147 - r[1];
}

Program 261:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[2] = r[2] - -0.653687;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 262:
// Fitness Information: 0.831205
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < 0.25708)
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < cf[0])
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 263:
// Fitness Information: 0.831207
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[5] < r[5])
	//if(r[2] < cf[0])
	//r[2] = cf[0] - cf[0];
	//r[4] = 0.0367432 * 0.580872;
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = r[0] / 0.202209;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 * r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	if(r[5] < -0.414124)
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[2] = cf[0] * r[5];
	r[5] = cf[0] - r[3];
}

Program 264:
// Fitness Information: 0.831207
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = 0.024292 * cf[0];
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	if(r[0] < cf[0])
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] + -0.538391;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = 0.435669 - r[5];
}

Program 265:
// Fitness Information: 0.83121
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = r[3] - cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < 0.822144)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	if(-0.411926 < 0.18396)
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 266:
// Fitness Information: 0.831579
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - r[2];
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[3] = cf[0] + cf[0];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[0] = r[0] * 0.840149;
	//r[4] = r[3] - -0.404602;
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 267:
// Fitness Information: 0.831866
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//r[4] = r[5] / -0.233276;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[3] = cf[0] * cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(cf[0] < cf[0])
	//if(0.76886 < 0.651855)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//if(-0.55426 < r[4])
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[3] - -0.40802;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[3])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + 0.903564;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - cf[0];
}

Program 268:
// Fitness Information: 0.833844
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] + 0.404724;
	r[3] = 0.742249 * r[1];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[5] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(cf[0] < r[0])
	if(-0.271118 < r[1])
	r[5] = cf[0] * 0.550171;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 269:
// Fitness Information: 0.834911
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < r[5])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = r[3] / r[3];
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[5] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[5] = cf[0] / r[0];
	//r[1] = 0.499268 - cf[0];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.988831 < -0.992126)
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] - r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 270:
// Fitness Information: 0.834998
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = 0.0202026 - cf[0];
	//if(0.808044 < r[1])
	//r[0] = -0.312683 / r[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(cf[0] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 271:
// Fitness Information: 0.835659
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = r[0] + r[5];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = cf[0] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[3] / r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[5] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	r[5] = cf[0] + cf[0];
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	r[5] = cf[0] - 0.40094;
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[5] = cf[0] - r[3];
}

Program 272:
// Fitness Information: 0.835659
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = r[0] + r[5];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = cf[0] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//if(r[1] < 0.532898)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[3] / r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[5] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	r[5] = cf[0] + cf[0];
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[5] = cf[0] - r[3];
}

Program 273:
// Fitness Information: 0.835659
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = r[0] + r[5];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = cf[0] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[2] = cf[0] - 0.194275;
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[3] / r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[5] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	r[5] = cf[0] + cf[0];
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[5] = cf[0] - r[3];
}

Program 274:
// Fitness Information: 0.84458
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[1] = r[2] + r[1];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = -0.604187 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = cf[0] - r[4];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 275:
// Fitness Information: 0.859552
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - cf[0];
	//r[0] = 0.639038 - r[0];
	//r[5] = r[5] - -0.183411;
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	r[4] = r[4] - -0.067749;
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = 0.652344 * cf[0];
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	if(0.626831 < 0.569702)
	r[4] = r[2] - 0.929871;
	r[5] = cf[0] * r[0];
}

Program 276:
// Fitness Information: 0.859552
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - cf[0];
	//r[0] = 0.639038 - r[0];
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	r[4] = r[4] - -0.067749;
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] + 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = 0.652344 * cf[0];
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	if(0.626831 < 0.569702)
	r[4] = r[2] - 0.929871;
	r[5] = cf[0] * r[0];
}

Program 277:
// Fitness Information: 0.862092
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[4] = cf[0] / r[0];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 278:
// Fitness Information: 0.863258
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < r[5])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[3] + r[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[0] = cf[0] - cf[0];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] / cf[0];
	//r[5] = r[1] - 0.532898;
	//if(-0.947083 < r[0])
	//r[2] = r[1] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = 0.604736 - r[2];
	r[4] = cf[0] + r[0];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.988831 < -0.992126)
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] - r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 279:
// Fitness Information: 0.864067
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[5] = r[3] / -0.370361;
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < r[1])
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] - r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 280:
// Fitness Information: 0.864067
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	if(r[4] < -0.196594)
	r[1] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 281:
// Fitness Information: 0.865698
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[5] = -0.337952 * r[1];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	//r[2] = r[5] + cf[0];
	//r[0] = cf[0] + r[0];
	//r[3] = r[2] + cf[0];
	//r[1] = cf[0] + r[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 282:
// Fitness Information: 0.865698
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = -0.361816 / r[3];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] / r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - 0.618408;
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	r[4] = -0.540771 / cf[0];
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(cf[0] < 0.159119)
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[5] < cf[0])
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[2];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[0] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 283:
// Fitness Information: 0.865698
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[1] = cf[0] / r[2];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 284:
// Fitness Information: 0.865698
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] * 0.820618;
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + cf[0];
	//r[4] = r[0] * cf[0];
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] + cf[0];
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 285:
// Fitness Information: 0.86701
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = 0.537109 * r[1];
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 286:
// Fitness Information: 0.868324
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 287:
// Fitness Information: 0.870388
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / cf[0];
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//if(r[2] < r[3])
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[1] = r[3] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 288:
// Fitness Information: 0.871068
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / r[3];
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 289:
// Fitness Information: 0.87392
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[2] + 0.949097;
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	r[4] = r[5] + cf[0];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 290:
// Fitness Information: 0.877324
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - cf[0];
	//if(cf[0] < 0.569702)
	//if(cf[0] < 0.459656)
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] / cf[0];
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] * 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = -0.913147 - r[1];
}

Program 291:
// Fitness Information: 0.880883
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - r[1];
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	if(0.483093 < r[2])
	r[3] = -0.151367 / -0.640259;
	//r[1] = -0.422791 - r[1];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	if(cf[0] < cf[0])
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.436829;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 292:
// Fitness Information: 0.880883
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - r[1];
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	if(0.483093 < r[2])
	r[3] = -0.151367 / -0.640259;
	//r[1] = -0.422791 - r[1];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	if(cf[0] < cf[0])
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.436829;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[3] = cf[0] / r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 293:
// Fitness Information: 0.897479
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] / cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 294:
// Fitness Information: 0.897628
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] + cf[0];
	//if(r[3] < cf[0])
	//if(0.161316 < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	r[1] = r[5] / r[5];
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[0] < r[1])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] / 0.159119;
	r[5] = cf[0] - r[3];
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	if(0.76886 < r[5])
	if(0.808044 < r[1])
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	r[5] = cf[0] - r[3];
}

Program 295:
// Fitness Information: 0.897628
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] + cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	r[1] = r[5] / r[5];
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[0] < r[1])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] + -0.423645;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] / 0.159119;
	r[5] = cf[0] - r[3];
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	if(0.76886 < r[5])
	if(0.808044 < r[1])
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	r[5] = cf[0] - r[3];
}

Program 296:
// Fitness Information: 0.910561
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < 0.822144)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	if(-0.411926 < 0.18396)
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(r[4] < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 297:
// Fitness Information: 0.915269
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.604004;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 298:
// Fitness Information: 0.919533
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[0] = r[5] * r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = r[0] * r[1];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[2] = cf[0] + r[0];
	//if(r[2] < -0.968445)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - -0.532837;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = -0.691406 * 0.759216;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[4] = r[4] + 0.979675;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[4] = r[4] - 0.518799;
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = -0.757019 - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < -0.929871)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] * -0.13739;
	r[2] = 0.584106 - -0.992432;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 299:
// Fitness Information: 0.919533
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 + r[5];
	//r[0] = r[5] * r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = r[0] * r[1];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[2] = cf[0] + r[0];
	//if(r[2] < -0.968445)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - -0.532837;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[4] = r[4] + 0.979675;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[4] = r[4] - 0.518799;
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = -0.757019 - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < -0.929871)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] * -0.13739;
	r[2] = 0.584106 - -0.992432;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 300:
// Fitness Information: 0.942789
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[1] = cf[0] / cf[0];
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - 0.0268555;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 301:
// Fitness Information: 0.944437
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//r[4] = cf[0] + -0.735168;
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.279297;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 302:
// Fitness Information: 0.944764
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	r[1] = 0.757996 + r[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[3] = cf[0] * cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(cf[0] < cf[0])
	//if(0.76886 < 0.651855)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - r[1];
	//if(-0.55426 < r[4])
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[3] - -0.40802;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[3])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + 0.903564;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 303:
// Fitness Information: 0.944764
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	r[1] = 0.757996 + r[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[3] = cf[0] * cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(cf[0] < cf[0])
	//if(0.76886 < 0.651855)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[2] = 0.0165405 - 0.929871;
	//if(-0.55426 < r[4])
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[3] - -0.40802;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[3])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + 0.903564;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 304:
// Fitness Information: 0.945751
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = 0.776062 - -0.833923;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + 0.0640869;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = r[0] + r[5];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < r[4])
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//if(0.831604 < r[1])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 305:
// Fitness Information: 0.945751
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = 0.776062 - -0.833923;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + 0.0640869;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = r[0] + r[5];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < r[4])
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 306:
// Fitness Information: 0.96603
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(0.18927 < 0.910522)
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[1] = -0.894226 / r[0];
	//r[5] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[3] = cf[0] / cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[5] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[0] = cf[0] - cf[0];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[0] < cf[0])
	//r[1] = r[3] + r[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//if(-0.52533 < -0.0922852)
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(-0.971436 < cf[0])
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + -0.0571899;
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[3] = -0.136658 / 0.205383;
	//r[4] = r[4] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < -0.663147)
	//r[4] = r[3] - -0.9422;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	r[3] = cf[0] - cf[0];
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	r[5] = cf[0] - r[0];
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 307:
// Fitness Information: 0.966419
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - -0.338013;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[3] = -0.201416 / cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(cf[0] < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 308:
// Fitness Information: 0.968427
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[3] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 309:
// Fitness Information: 0.991254
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[0] < cf[0])
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = cf[0] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(-0.189453 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[3] = r[3] + -0.0452271;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 310:
// Fitness Information: 1.00334
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[4] = cf[0] / 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[5] = cf[0] / r[5];
	//if(0.585144 < r[1])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 311:
// Fitness Information: 1.04947
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//if(cf[0] < 0.404724)
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = 0.351501 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 312:
// Fitness Information: 1.07204
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[0] = r[5] * r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = r[0] * r[1];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[2] = cf[0] + r[0];
	//if(r[2] < -0.968445)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - -0.532837;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//if(r[5] < cf[0])
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[4] = r[4] + 0.979675;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = -0.757019 - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < -0.929871)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	if(r[0] < 0.771301)
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] * -0.13739;
	r[2] = 0.584106 - -0.992432;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 313:
// Fitness Information: 1.07689
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	r[4] = cf[0] + r[3];
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = r[1] * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 314:
// Fitness Information: 1.07998
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[4] = r[4] + r[3];
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(r[3] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[4] = r[1] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[3] = 0.947876 / r[0];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 315:
// Fitness Information: 1.09006
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//if(0.361694 < cf[0])
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[0] = 0.636658 / -0.77771;
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[3] = r[1] + cf[0];
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 316:
// Fitness Information: 1.09006
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - -0.855408;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[1] = 0.751953 * 0.749146;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 317:
// Fitness Information: 1.09006
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[1] < -0.0890503)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(cf[0] < cf[0])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(cf[0] < 0.0959473)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] - r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 318:
// Fitness Information: 1.09006
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//if(r[0] < -0.988586)
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 + r[1];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = 0.538757 + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	if(r[5] < r[5])
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = r[3] * cf[0];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 319:
// Fitness Information: 1.09072
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 320:
// Fitness Information: 1.09072
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(0.488159 < r[4])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + r[5];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 321:
// Fitness Information: 1.09072
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = r[2] + -0.184692;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] + -0.0199585;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < -0.333984)
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 322:
// Fitness Information: 1.09344
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = -0.243408 + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[3] = r[2] / -0.414001;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] * 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 323:
// Fitness Information: 1.1002
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = 0.776062 - -0.833923;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + 0.0640869;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = r[0] + r[5];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(cf[0] < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 324:
// Fitness Information: 1.10234
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[5] = r[2] + -0.132507;
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[0] = -0.312683 / r[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	if(0.203735 < r[3])
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[0] = 0.161743 - -0.0252075;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	r[5] = r[1] - cf[0];
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 325:
// Fitness Information: 1.11207
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[3] = 0.765259 / -0.586243;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 326:
// Fitness Information: 1.11491
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[2] = cf[0] - cf[0];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 327:
// Fitness Information: 1.11491
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = 0.848267 - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 328:
// Fitness Information: 1.11491
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[2] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = 0.141418 + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[0] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 329:
// Fitness Information: 1.11491
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[0] < cf[0])
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = r[2] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * 0.580017;
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[0] = cf[0] + 0.0582886;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 330:
// Fitness Information: 1.11491
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[3] = -0.673645 - cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[0] = r[3] + -0.606934;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + -0.869629;
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[1])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 331:
// Fitness Information: 1.11491
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - -0.855408;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//r[4] = r[2] - cf[0];
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 332:
// Fitness Information: 1.11491
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < 0.0078125)
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] * -0.13739;
	r[4] = r[5] - cf[0];
	r[5] = cf[0] - r[3];
}

Program 333:
// Fitness Information: 1.12292
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(0.18927 < 0.910522)
	//if(r[0] < cf[0])
	//if(r[2] < 0.641052)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[1] = -0.894226 / r[0];
	//r[5] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[3] = cf[0] / cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] + -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[5] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 / 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[5] = r[1] - 0.532898;
	//r[3] = cf[0] / r[5];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[0] = cf[0] - cf[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[3] + r[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(-0.971436 < cf[0])
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + -0.0571899;
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[2] = -0.136658 / 0.205383;
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < -0.663147)
	//r[4] = r[3] - -0.9422;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 334:
// Fitness Information: 1.12292
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(0.18927 < 0.910522)
	//if(r[0] < cf[0])
	//if(r[2] < 0.641052)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[1] = -0.894226 / r[0];
	//r[5] = cf[0] / cf[0];
	//if(r[3] < r[0])
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[3] = cf[0] / cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] + -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[5] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[5] = r[1] - 0.532898;
	//r[3] = cf[0] / r[5];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[0] = cf[0] - cf[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[3] + r[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(-0.971436 < cf[0])
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + -0.0571899;
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[2] = -0.136658 / 0.205383;
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < -0.663147)
	//r[4] = r[3] - -0.9422;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 335:
// Fitness Information: 1.12292
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[2] = r[4] / -0.669617;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = cf[0] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	if(cf[0] < 0.665405)
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(0.382385 < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[3] = cf[0] + r[2];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 336:
// Fitness Information: 1.12292
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[1] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(cf[0] < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(0.481323 < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] + 0.752136;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 337:
// Fitness Information: 1.15399
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = -0.680969 * cf[0];
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 338:
// Fitness Information: 1.20448
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[0] = r[1] - 0.327576;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 339:
// Fitness Information: 1.22952
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	r[3] = 0.966858 + cf[0];
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = 0.130981 + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 340:
// Fitness Information: 1.24676
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[5] = 0.482544 + 0.427246;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[4] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//r[4] = cf[0] - r[4];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 341:
// Fitness Information: 1.2563
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = r[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < cf[0])
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(cf[0] < 0.197083)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 342:
// Fitness Information: 1.26058
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[1] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	r[4] = r[4] / r[2];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(-0.38562 < -0.0687866)
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 343:
// Fitness Information: 1.36202
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = 0.0202026 - cf[0];
	//if(0.808044 < r[1])
	//r[0] = -0.312683 / r[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[3] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 344:
// Fitness Information: 1.36577
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	r[4] = 0.72168 + -0.13739;
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * -0.598083;
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(-0.475403 < cf[0])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 345:
// Fitness Information: 1.37237
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(cf[0] < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.915955;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[3] = r[0] / -0.498901;
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(r[0] < 0.966187)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 346:
// Fitness Information: 1.38075
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 - 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 347:
// Fitness Information: 1.38075
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[2] = 0.00842285 + -0.421509;
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 348:
// Fitness Information: 1.38526
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = 0.538757 + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//if(r[0] < -0.988586)
	//r[0] = cf[0] * -0.121399;
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < -0.322021)
	//r[4] = cf[0] - r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[1] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] + 0.159119;
	r[5] = cf[0] - r[3];
}

Program 349:
// Fitness Information: 1.38657
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * -0.632019;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[4] = cf[0] - r[5];
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//if(r[3] < 0.0349731)
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 350:
// Fitness Information: 1.41748
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[0] = -0.312683 / r[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = r[4] * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] - cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 351:
// Fitness Information: 1.43005
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < cf[0])
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 352:
// Fitness Information: 1.4422
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//if(r[0] < r[3])
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(r[5] < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[5] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] / -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 353:
// Fitness Information: 1.45763
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[3] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	r[5] = cf[0] - r[3];
}

Program 354:
// Fitness Information: 1.45938
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] / r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//if(cf[0] < cf[0])
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 355:
// Fitness Information: 1.48754
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[5] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.279297;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 356:
// Fitness Information: 1.48754
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	r[1] = cf[0] * -0.835571;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	r[3] = cf[0] * 0.418152;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 357:
// Fitness Information: 1.5143
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = cf[0] - r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[3] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = r[4] * r[4];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(r[2] < r[0])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	if(r[3] < 0.489441)
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - cf[0];
	r[3] = cf[0] + cf[0];
}

Program 358:
// Fitness Information: 1.517
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[1] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(cf[0] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = cf[0] / cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[1] + cf[0];
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[4] = r[5] - 0.159119;
	r[3] = cf[0] + 0.743958;
}

Program 359:
// Fitness Information: 1.517
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[1] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.404724;
	//if(-0.433044 < r[2])
	//if(cf[0] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = cf[0] / cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[1] + cf[0];
	r[1] = r[0] + -0.633301;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[3] = cf[0] + 0.743958;
}

Program 360:
// Fitness Information: 1.63358
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * 0.0651245;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - cf[0];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
}

Program 361:
// Fitness Information: 1.63358
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 362:
// Fitness Information: 1.6349
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//if(cf[0] < r[1])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = 0.386902 * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - r[3];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	r[3] = -0.184692 - cf[0];
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[1] = -0.493591 * 0.374939;
	r[5] = cf[0] - r[3];
}

Program 363:
// Fitness Information: 1.6349
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] / cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] * 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[1] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < r[1])
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 364:
// Fitness Information: 1.71663
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[2] / r[2];
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	r[3] = r[4] / cf[0];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.275024;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 365:
// Fitness Information: 1.73606
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = cf[0] - r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - 0.188599;
	r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = r[4] * r[4];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	if(r[3] < 0.489441)
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - cf[0];
	r[3] = cf[0] + cf[0];
}

Program 366:
// Fitness Information: 1.80401
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.979126 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 367:
// Fitness Information: 1.82388
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[0] < r[4])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[3] = 0.635925 / r[5];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 368:
// Fitness Information: 1.87597
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * 0.0651245;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = 0.0135498 / r[0];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 369:
// Fitness Information: 1.91861
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[3] < r[3])
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 370:
// Fitness Information: 1.94321
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 - -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[0] = r[2] - 0.726074;
	//r[4] = r[1] * 0.0737305;
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 371:
// Fitness Information: 2.00986
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(0.649963 < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = -0.607056 - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 / r[1];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	if(cf[0] < 0.961121)
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 372:
// Fitness Information: 2.09893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(cf[0] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 373:
// Fitness Information: 2.14661
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//if(cf[0] < r[0])
	//r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] * 0.927185;
	//if(r[2] < -0.132507)
	//r[0] = -0.17749 + cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[3] = cf[0] / cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[5] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = r[1] + r[5];
	//if(-0.947083 < r[0])
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] / cf[0];
	//r[5] = r[2] + -0.991455;
	//r[3] = r[2] + cf[0];
	//r[0] = cf[0] - cf[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[3] + r[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < -0.663147)
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - r[1];
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = -0.982361 - -0.0730591;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[3] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	//if(0.000427246 < r[4])
}

Program 374:
// Fitness Information: 2.22084
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = 0.776062 - -0.833923;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + 0.0640869;
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[3] = 0.969482 - cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] - r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 375:
// Fitness Information: 2.22135
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	if(cf[0] < 0.851929)
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 376:
// Fitness Information: 2.29383
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = r[4] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//if(-0.86615 < r[2])
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[3] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	r[2] = -0.630005 + -0.0774536;
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / r[5];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	//if(r[3] < -0.194275)
}

Program 377:
// Fitness Information: 2.31289
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[1] = cf[0] - r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[4] = cf[0] - r[5];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[4] = r[0] + r[5];
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.346069;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	r[1] = -0.271118 / r[1];
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 378:
// Fitness Information: 2.31289
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[0] = -0.228271 + 0.346252;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[1] = cf[0] - r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[4] = cf[0] - r[5];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[4] = r[0] + r[5];
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.346069;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 379:
// Fitness Information: 2.37891
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	r[3] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 380:
// Fitness Information: 2.53806
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[5] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[3] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[1] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[3] = r[5] / 0.889526;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 381:
// Fitness Information: 2.56969
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[3] = cf[0] * cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(cf[0] < cf[0])
	//if(0.76886 < 0.651855)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	r[5] = 0.690552 / r[1];
	//r[0] = cf[0] * -0.121399;
	//r[0] = cf[0] - cf[0];
	if(cf[0] < r[5])
	r[4] = r[2] - 0.820618;
	//r[0] = r[2] * cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[4] = cf[0] - r[1];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[3])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + 0.903564;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - cf[0];
}

Program 382:
// Fitness Information: 2.77185
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(r[5] < -0.201721)
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + r[2];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 383:
// Fitness Information: 2.98652
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 + r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 384:
// Fitness Information: 3.0569
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[1] = cf[0] - cf[0];
	//if(r[2] < r[4])
	//if(-0.484131 < r[5])
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	r[3] = 0.518127 / r[3];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] / r[4];
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 385:
// Fitness Information: 3.55397
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[1] = 0.133057 - cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 386:
// Fitness Information: 3.65134
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = cf[0] - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 - -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[3] = cf[0] + r[0];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 387:
// Fitness Information: 3.6957
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	r[5] = 0.808044 + r[1];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] / r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//if(r[3] < r[1])
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] / 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 388:
// Fitness Information: 3.69653
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = cf[0] + r[1];
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[0] = -0.250916 - cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[2];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(0.418274 < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[1] = 0.11084 - cf[0];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = cf[0] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[0] = 0.815857 + cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//if(0.808044 < r[1])
}

Program 389:
// Fitness Information: 4.05022
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//r[2] = -0.0894775 * r[5];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = -0.720947 * r[3];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	r[1] = r[5] + r[1];
	r[5] = cf[0] - 0.188599;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 390:
// Fitness Information: 4.06796
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[2] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 - -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[3] = cf[0] + r[0];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[1] = r[2] - 0.978455;
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - r[3];
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 391:
// Fitness Information: 4.24831
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = -0.776001 + 0.490051;
	r[5] = cf[0] - r[3];
}

Program 392:
// Fitness Information: 4.25597
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[4] = r[4] / r[2];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[0] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = cf[0] - cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + r[2];
	//r[5] = r[1] - 0.532898;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = cf[0] - cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 393:
// Fitness Information: 4.27156
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < -0.773743)
	//r[5] = r[4] - -0.819153;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[1] = r[2] * r[4];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 394:
// Fitness Information: 4.27156
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] + r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(cf[0] < r[5])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 * 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[1] = r[2] - r[4];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[4] = r[5] / 0.0709229;
	//r[4] = cf[0] - 0.159119;
	//r[5] = 0.274902 - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 395:
// Fitness Information: 4.43863
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[1] = 0.879395 + cf[0];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//r[5] = cf[0] + 0.142456;
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[4] = 0.830933 + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(cf[0] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 396:
// Fitness Information: 4.55988
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[5] = r[5] + cf[0];
	//r[0] = r[1] + 0.643982;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 397:
// Fitness Information: 5.09251
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[2];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = r[5] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] - cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 398:
// Fitness Information: 5.14892
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//if(r[0] < r[3])
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[3] = 0.969482 - cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + 0.0640869;
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[1] = 0.776062 - -0.833923;
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] - r[1];
	//if(r[0] < r[5])
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(r[5] < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[5] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] / -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 399:
// Fitness Information: 5.16488
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.363953)
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//if(0.91449 < 0.750488)
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 400:
// Fitness Information: 5.16488
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = -0.243408 + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.363953)
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[0] = -0.834229 - -0.146484;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] * 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 401:
// Fitness Information: 5.1662
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - r[1];
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//if(r[4] < r[2])
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 402:
// Fitness Information: 5.21169
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = 0.744934 / r[1];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = cf[0] - r[4];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - -0.265808;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 403:
// Fitness Information: 5.44991
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] / cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[2] = -0.255188 / cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.363953)
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[2] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.177856 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = r[5] * r[5];
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	r[1] = r[0] / cf[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 404:
// Fitness Information: 5.56138
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = -0.361816 / r[3];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] / r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - 0.618408;
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = cf[0] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[2];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[0] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[5] = cf[0] * 0.351013;
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 405:
// Fitness Information: 6.15025
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[4] = r[4] / r[2];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.259705;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[0] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = cf[0] - cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = cf[0] - cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 406:
// Fitness Information: 6.25417
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[4] < -0.992615)
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//if(-0.954834 < cf[0])
	//r[3] = r[3] / cf[0];
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(cf[0] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//if(r[4] < r[2])
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 407:
// Fitness Information: 6.4781
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = cf[0] - r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = r[4] * r[4];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[3] = -0.52533 * -0.0922852;
	//r[1] = r[3] - cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] + 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[3] = r[5] - cf[0];
	r[3] = cf[0] + cf[0];
}

Program 408:
// Fitness Information: 6.67842
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[3] = cf[0] * cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(cf[0] < cf[0])
	//if(0.76886 < 0.651855)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//if(-0.55426 < r[4])
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[3] - -0.40802;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[3])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + 0.903564;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = r[5] * 0.534607;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - cf[0];
}

Program 409:
// Fitness Information: 6.73272
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[2] = cf[0] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//if(-0.447876 < cf[0])
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[1] = -0.403625 + r[4];
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + 0.942566;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - -0.0808716;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	r[2] = cf[0] - -0.351074;
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
}

Program 410:
// Fitness Information: 7.12732
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] + -0.781494;
	r[4] = cf[0] - r[1];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] / cf[0];
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[5] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.686829;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 411:
// Fitness Information: 7.45318
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[4] = r[2] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = cf[0] + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[3] * -0.802002;
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] / 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 412:
// Fitness Information: 8.69215
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[1] = 0.677979 + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[4] = r[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(cf[0] < r[5])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 * 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[1] = r[2] - r[4];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = cf[0] - r[4];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[4] = r[5] / 0.0709229;
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 413:
// Fitness Information: 9.01042
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = cf[0] + -0.723816;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = 0.649597 * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = cf[0] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] / r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(0.382385 < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[3] = cf[0] + r[2];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 414:
// Fitness Information: 9.28945
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[2] = r[5] + cf[0];
	r[0] = r[2] - cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 415:
// Fitness Information: 9.6143
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[3] = r[4] + r[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 416:
// Fitness Information: 9.7396
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[0] = cf[0] - cf[0];
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//if(cf[0] < cf[0])
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[0] = r[3] + r[5];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 417:
// Fitness Information: 9.87211
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[0] < r[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[0] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = 0.403931 + -0.13739;
	if(r[2] < r[0])
	r[0] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - cf[0];
}

Program 418:
// Fitness Information: 10.1098
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[3] = cf[0] + r[2];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 / r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[5] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[5] = cf[0] - r[3];
}

Program 419:
// Fitness Information: 10.2134
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[2] = cf[0] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//if(-0.447876 < cf[0])
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[1] = -0.403625 + r[4];
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[4] = -0.466125 / 0.141785;
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + 0.942566;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - -0.0808716;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	if(cf[0] < -0.249756)
	r[5] = cf[0] - r[3];
}

Program 420:
// Fitness Information: 11.2975
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[5] = r[2] / -0.132507;
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = r[3] / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	if(cf[0] < 0.569702)
	r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//if(cf[0] < -0.642822)
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(cf[0] < 0.26709)
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 421:
// Fitness Information: 11.6833
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - cf[0];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//r[4] = r[4] / r[2];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 - cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[0] = cf[0] / cf[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 422:
// Fitness Information: 13.8168
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[0] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 423:
// Fitness Information: 13.8798
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[0] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] - 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 424:
// Fitness Information: 13.8798
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[0] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] - 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 425:
// Fitness Information: 14.0209
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[2] < r[4])
	r[0] = cf[0] - cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
}

Program 426:
// Fitness Information: 14.1494
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[1] = r[2] / r[2];
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < cf[0])
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(-0.752625 < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 427:
// Fitness Information: 14.2448
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[1] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[0] = r[3] / 0.230286;
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[2] = 0.0557251 + -0.217407;
	r[5] = cf[0] - r[3];
}

Program 428:
// Fitness Information: 14.6574
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	if(cf[0] < 0.569702)
	r[1] = cf[0] * cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(r[2] < r[0])
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(cf[0] < cf[0])
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[1] = 0.155701 * r[1];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 429:
// Fitness Information: 15.0716
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] + cf[0];
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + -0.378357;
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = 0.0734253 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 430:
// Fitness Information: 15.0716
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] + cf[0];
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + -0.378357;
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	r[5] = r[0] * r[1];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 431:
// Fitness Information: 15.3729
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[3] = 0.064209 + r[1];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 432:
// Fitness Information: 17.4455
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - 0.0268555;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[5] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 433:
// Fitness Information: 17.6644
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[4] + r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[1] = r[1] / 0.520203;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[5] = cf[0] - 0.828613;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 434:
// Fitness Information: 18.3409
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < cf[0])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = 0.130981 + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 435:
// Fitness Information: 18.4378
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(0.750488 < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[4] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = r[5] * cf[0];
	//r[0] = -0.617004 - cf[0];
	//if(cf[0] < -0.121399)
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[2] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[4] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - r[3];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] - r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(cf[0] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[1] = r[0] + cf[0];
	//r[2] = r[3] * cf[0];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 436:
// Fitness Information: 18.4378
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(0.750488 < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[4] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = r[5] * cf[0];
	//r[0] = -0.617004 - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[2] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[4] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - r[3];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] - r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(cf[0] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[1] = r[0] + cf[0];
	//r[2] = r[3] * cf[0];
	r[4] = cf[0] / 0.917786;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 437:
// Fitness Information: 18.4378
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = -0.342041 + -0.509521;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = 0.776062 - -0.833923;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + 0.0640869;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] / cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(cf[0] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 438:
// Fitness Information: 18.4818
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = -0.552368 * r[4];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / 0.655884;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * 0.252747;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 439:
// Fitness Information: 18.551
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[3] < r[1])
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	r[5] = 0.808044 + r[1];
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[3] = 0.635925 - r[5];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 440:
// Fitness Information: 18.9445
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - r[3];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < cf[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 441:
// Fitness Information: 19.133
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[1] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[0] = r[2] / cf[0];
	//if(r[0] < r[0])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(r[0] < r[4])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//if(r[1] < 0.955933)
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.69635 + r[3];
	if(0.635925 < r[5])
	r[0] = cf[0] + 0.796875;
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(cf[0] < cf[0])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 442:
// Fitness Information: 19.2276
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[1] = 0.626831 * 0.569702;
	//r[0] = 0.820313 / cf[0];
	//if(0.750488 < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] * r[2];
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//if(-0.255493 < r[1])
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
}

Program 443:
// Fitness Information: 19.2276
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[1] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(0.750488 < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = r[0] / 0.808533;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] * r[2];
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[0] = cf[0] * -0.370117;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//if(-0.255493 < r[1])
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
}

Program 444:
// Fitness Information: 19.9872
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//r[3] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] + -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(cf[0] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * cf[0];
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[2] < cf[0])
	if(cf[0] < r[0])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 445:
// Fitness Information: 20.3559
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[5] = 0.235779 * r[3];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[0] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 446:
// Fitness Information: 20.3559
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[0] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 447:
// Fitness Information: 20.572
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[5] = -0.133362 - cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[0] < r[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = r[0] + cf[0];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - cf[0];
}

Program 448:
// Fitness Information: 20.651
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = -0.552368 * r[4];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[1] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 449:
// Fitness Information: 21.1032
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[2] = 0.59375 * -0.63678;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = r[4] - -0.623474;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 450:
// Fitness Information: 22.5177
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[3] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / cf[0];
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(-0.752625 < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 451:
// Fitness Information: 23.2527
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	//r[1] = 0.0165405 + 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / cf[0];
	//r[0] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[0] = r[2] - r[0];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(0.0526123 < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = 0.737732 / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 452:
// Fitness Information: 24.9379
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[1] < 0.37561)
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[5] = cf[0] / r[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//r[2] = -0.956726 / cf[0];
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = -0.690796 / -0.485046;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[3] = -0.452209 / -0.0125122;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 453:
// Fitness Information: 26.5585
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	r[3] = cf[0] / 0.466248;
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 454:
// Fitness Information: 26.77
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - cf[0];
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	if(cf[0] < cf[0])
	r[4] = -0.883667 * cf[0];
	//r[2] = -0.382629 * -0.833801;
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(cf[0] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - cf[0];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 455:
// Fitness Information: 26.77
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[0] = r[4] / cf[0];
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - cf[0];
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	if(cf[0] < cf[0])
	r[4] = -0.883667 * cf[0];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(cf[0] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - cf[0];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 456:
// Fitness Information: 27.0273
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[3] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//if(r[3] < -0.40686)
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(0.00769043 < -0.288818)
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[5] = cf[0] - r[3];
}

Program 457:
// Fitness Information: 27.0273
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//r[0] = r[5] / r[4];
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//if(r[3] < -0.40686)
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(0.00769043 < -0.288818)
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[5] = cf[0] - r[3];
}

Program 458:
// Fitness Information: 27.1368
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] + cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	//r[1] = r[5] / r[5];
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[1] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[0] < r[1])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	r[0] = cf[0] - -0.425781;
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] / 0.159119;
	r[5] = cf[0] - r[3];
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	if(0.76886 < r[5])
	if(0.808044 < r[1])
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 459:
// Fitness Information: 27.253
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[1] = r[2] - r[3];
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[5])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[0] = r[1] + cf[0];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 460:
// Fitness Information: 27.4469
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[1] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 461:
// Fitness Information: 27.7497
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < r[5])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = r[3] / r[3];
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[5] = cf[0] / r[0];
	//r[1] = 0.499268 - cf[0];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.988831 < -0.992126)
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[3] = r[4] * r[1];
	r[2] = r[2] - r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 462:
// Fitness Information: 29.6424
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//if(r[0] < r[3])
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < 0.625488)
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[0] = cf[0] - cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - 0.458801;
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] / -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 463:
// Fitness Information: 30.2293
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//if(r[0] < r[3])
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	if(r[2] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[0] = cf[0] - cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - 0.458801;
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] / -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 464:
// Fitness Information: 30.6237
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[5] = r[2] - 0.21991;
	//r[5] = r[2] + -0.132507;
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - cf[0];
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 * -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[3] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 465:
// Fitness Information: 30.6323
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[2] = r[2] - 0.929871;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[5] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 * -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[3] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 466:
// Fitness Information: 30.6672
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = -0.582397 / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[0] = cf[0] + -0.461243;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//r[4] = cf[0] + -0.378357;
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 467:
// Fitness Information: 33.9788
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[3] = -0.673645 - cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[0] = r[3] + -0.606934;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[0] = 0.751099 + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < cf[0])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 468:
// Fitness Information: 35.5675
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[2] = cf[0] + cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < cf[0])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[4] = r[0] / cf[0];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[5] = -0.827576 / cf[0];
	r[1] = r[3] / r[5];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 469:
// Fitness Information: 35.5675
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[1] = 0.635742 * cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] * cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[3] = cf[0] * 0.149414;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(-0.0640259 < r[2])
	r[1] = 0.163452 - cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 470:
// Fitness Information: 35.5675
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//if(-0.844482 < r[4])
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 471:
// Fitness Information: 35.5675
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(0.0922852 < r[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[5] = r[5] + cf[0];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 472:
// Fitness Information: 35.5675
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = 0.744934 / r[1];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = cf[0] - r[4];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
}

Program 473:
// Fitness Information: 35.5675
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.851563 - r[5];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = cf[0] / cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / r[1];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 474:
// Fitness Information: 35.5675
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//r[4] = cf[0] - cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[0])
	//if(0.76886 < r[5])
	//if(r[3] < 0.464172)
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[4] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	//if(cf[0] < cf[0])
}

Program 475:
// Fitness Information: 35.5957
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[1] = cf[0] * 0.218262;
	//r[3] = -0.191589 / r[3];
	//r[0] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = -0.834961 - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[4] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 476:
// Fitness Information: 36.3157
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = cf[0] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[1] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 477:
// Fitness Information: 36.3157
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = cf[0] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 478:
// Fitness Information: 40.1324
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * cf[0];
	r[1] = 0.757996 + r[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	r[3] = cf[0] * cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(cf[0] < cf[0])
	//if(0.76886 < 0.651855)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(r[2] < r[0])
	r[4] = cf[0] + r[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[3])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + 0.903564;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 479:
// Fitness Information: 41.5807
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//r[3] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] + -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[1] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	if(r[2] < cf[0])
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[2] < cf[0])
	if(cf[0] < r[0])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 480:
// Fitness Information: 42.7301
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[0] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[5] = cf[0] - r[2];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	if(cf[0] < r[1])
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 481:
// Fitness Information: 44.2983
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - cf[0];
	//if(cf[0] < 0.569702)
	//if(cf[0] < 0.459656)
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//r[1] = r[2] + r[4];
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = -0.913147 - r[1];
}

Program 482:
// Fitness Information: 44.2983
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - cf[0];
	//if(cf[0] < 0.569702)
	//if(cf[0] < 0.459656)
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[0] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = -0.913147 - r[1];
}

Program 483:
// Fitness Information: 45.9936
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[2] = 0.658264 - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = 0.537109 * r[1];
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[3] = 0.327698 * r[1];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 484:
// Fitness Information: 47.0702
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - r[2];
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 485:
// Fitness Information: 48.7706
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[1] < -0.0890503)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[0] = r[2] + cf[0];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(cf[0] < 0.0959473)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 486:
// Fitness Information: 51.2171
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.915955;
	//r[2] = r[0] - 0.589478;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * -0.492371;
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = 0.629822 * r[5];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 487:
// Fitness Information: 51.2171
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[5] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] + 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.915955;
	//r[2] = r[0] - 0.589478;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * -0.492371;
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 488:
// Fitness Information: 51.2251
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[3];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.915955;
	//r[2] = r[0] - 0.589478;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(cf[0] < r[0])
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * -0.492371;
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 489:
// Fitness Information: 51.2868
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = r[2] - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(cf[0] < -0.556946)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 490:
// Fitness Information: 51.3083
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[5] = -0.133362 - cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[0] < r[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < r[1])
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - cf[0];
}

Program 491:
// Fitness Information: 52.3165
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[1] < -0.0890503)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] / 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[0] = r[2] + cf[0];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(cf[0] < 0.0959473)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 492:
// Fitness Information: 56.1479
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 * r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[5];
	r[5] = r[4] - -0.539978;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 493:
// Fitness Information: 57.5989
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[4] = cf[0] - r[5];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[3] = cf[0] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[0] = 0.0584717 / r[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < r[3])
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 494:
// Fitness Information: 59.0619
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[0] < r[5])
	//if(0.781128 < r[4])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 495:
// Fitness Information: 59.2589
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = r[2] + -0.184692;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = cf[0] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	if(cf[0] < r[4])
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 496:
// Fitness Information: 59.4493
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[1] = r[2] / cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[3] = 0.635925 / r[5];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 497:
// Fitness Information: 61.5183
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[1] = r[1] / r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 498:
// Fitness Information: 62.9304
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - 0.0268555;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(cf[0] < 0.26709)
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = cf[0] / cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 499:
// Fitness Information: 68.6106
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	if(cf[0] < 0.569702)
	r[1] = cf[0] / r[2];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[0] = -0.485474 + -0.587646;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 500:
// Fitness Information: 73.2738
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//if(r[0] < -0.988586)
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[0] + r[5];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = 0.538757 + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(cf[0] < r[3])
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = r[3] * cf[0];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 501:
// Fitness Information: 73.8078
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = -0.337952 * r[1];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = r[1] + 0.0737305;
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 - r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 502:
// Fitness Information: 74.0983
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[5] = r[5] + cf[0];
	//r[0] = r[1] + 0.643982;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = 0.750488 + -0.0480957;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 503:
// Fitness Information: 75.1942
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[4] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[5] = cf[0] + r[2];
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 504:
// Fitness Information: 79.8457
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[0] = -0.302307 * cf[0];
	//r[3] = -0.191589 / r[3];
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[3] = r[4] * r[4];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = 0.765015 - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 505:
// Fitness Information: 81.6623
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(r[5] < r[0])
	r[4] = cf[0] + r[0];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[0] = 0.401001 - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = 0.582764 / r[5];
	//r[1] = 0.143738 - r[1];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[4])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[1] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 506:
// Fitness Information: 81.6919
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[1] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[3] + r[0];
	//r[4] = cf[0] / 0.82373;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	//r[4] = cf[0] - 0.159119;
	r[2] = cf[0] + cf[0];
	//r[0] = cf[0] + r[4];
	//if(0.331238 < r[2])
	//r[0] = 0.99231 - r[2];
	//r[3] = 0.943359 / cf[0];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = r[0] * r[1];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[2] = cf[0] + r[0];
	//if(r[2] < -0.968445)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - -0.532837;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[4] = r[4] + 0.979675;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = -0.757019 - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < -0.929871)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] * -0.13739;
	r[2] = 0.584106 - -0.992432;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 507:
// Fitness Information: 81.6929
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] + 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = r[1] - r[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] + -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[5] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[1] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * cf[0];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 508:
// Fitness Information: 81.6985
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 / 0.569702;
	//r[0] = 0.866272 / -0.503723;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[2] = 0.266296 * r[3];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	//if(0.00769043 < -0.288818)
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = 0.122681 - cf[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[4] * r[1];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	r[5] = cf[0] / 0.247009;
	r[2] = r[0] * 0.358704;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 509:
// Fitness Information: 81.7154
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[4] = 0.924377 - cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 510:
// Fitness Information: 81.7873
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] + -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] / cf[0];
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - cf[0];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[1] = 0.674561 - -0.608032;
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 511:
// Fitness Information: 81.8444
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = r[1] / 0.877808;
	//if(cf[0] < r[5])
	//if(r[2] < -0.132507)
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[0] = -0.643066 + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[5] = cf[0] / r[0];
	//r[1] = 0.499268 - cf[0];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.988831 < -0.992126)
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] - r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 512:
// Fitness Information: 82.169
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.511047 * 0.569702;
	//if(r[0] < -0.248474)
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 * 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[1] = cf[0] + -0.236572;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//if(0.0444336 < 0.604309)
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 513:
// Fitness Information: 82.266
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	r[3] = r[1] - 0.0534668;
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[0];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 514:
// Fitness Information: 82.4924
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[1] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(cf[0] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[0] = 0.302124 * 0.157654;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[0] = cf[0] + cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[1] + cf[0];
	r[1] = r[0] + -0.633301;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[3] = cf[0] + 0.743958;
}

Program 515:
// Fitness Information: 82.4924
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[1] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(cf[0] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[0] = cf[0] + cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[1] + cf[0];
	r[1] = r[0] + -0.633301;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[3] = cf[0] + 0.743958;
}

Program 516:
// Fitness Information: 84.6114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(-0.124695 < -0.0584717)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[0] = 0.812805 * 0.955139;
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[5] = r[4] + r[1];
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	//r[5] = 0.647461 - 0.451477;
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = -0.279724 * r[5];
}

Program 517:
// Fitness Information: 84.6229
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//if(r[3] < 0.0349731)
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] + r[1];
	r[2] = cf[0] / -0.501709;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 518:
// Fitness Information: 85.0107
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 / 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 / -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	//if(-0.967102 < 0.796265)
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	//r[5] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[4] * r[1];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	r[5] = cf[0] / 0.247009;
	r[2] = r[0] * 0.358704;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 519:
// Fitness Information: 85.4182
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(r[2] < 0.949097)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < cf[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[4] = r[1] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 520:
// Fitness Information: 85.5238
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[4] = cf[0] / -0.973145;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 521:
// Fitness Information: 86.4809
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[5] = -0.337952 * r[1];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	r[5] = cf[0] - cf[0];
	//r[3] = cf[0] + cf[0];
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 522:
// Fitness Information: 86.4873
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * -0.8396;
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = r[2] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 523:
// Fitness Information: 87.7899
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[1] = r[2] - r[3];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//r[4] = r[0] - cf[0];
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(r[3] < -0.409119)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 524:
// Fitness Information: 88.1037
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = 0.53479 - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 - cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[1] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = -0.696045 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	r[2] = 0.994995 + r[5];
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] / r[1];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + -0.723328;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = -0.0662842 - r[2];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 525:
// Fitness Information: 89.5084
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 - r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < r[2])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//if(r[5] < r[2])
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[5] = cf[0] + cf[0];
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	//r[5] = r[4] * r[1];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 526:
// Fitness Information: 90.4274
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = r[5] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[4] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//if(r[5] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 527:
// Fitness Information: 90.4274
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[4] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(0.585144 < r[1])
	//if(r[5] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 528:
// Fitness Information: 90.9668
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 - r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < r[2])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	//r[5] = r[4] * r[1];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 529:
// Fitness Information: 91.2487
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[0] = 0.812805 * 0.955139;
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[1] = r[0] / r[3];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + 0.262634;
	if(cf[0] < r[0])
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	r[4] = r[5] / r[5];
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = -0.279724 * r[5];
}

Program 530:
// Fitness Information: 91.2487
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[0] = 0.812805 * 0.955139;
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[1] = r[0] / r[3];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + 0.262634;
	if(cf[0] < r[0])
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[1] = -0.229919 - r[4];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = -0.279724 * r[5];
}

Program 531:
// Fitness Information: 91.2487
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[0] = 0.812805 * 0.955139;
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[1] = r[0] / r[3];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + 0.262634;
	if(cf[0] < r[0])
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[1] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = -0.279724 * r[5];
}

Program 532:
// Fitness Information: 91.9382
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 533:
// Fitness Information: 93.3897
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[4];
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[0] = cf[0] + r[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	r[0] = r[1] * r[5];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = cf[0] - r[3];
}

Program 534:
// Fitness Information: 93.3897
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	r[5] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[0] = cf[0] + r[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	r[0] = r[1] * r[5];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = cf[0] - r[3];
}

Program 535:
// Fitness Information: 93.4047
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = cf[0] + r[0];
	//r[5] = cf[0] * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[0] < r[3])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[0] = 0.0281982 / 0.957092;
	//r[4] = cf[0] - cf[0];
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	r[2] = r[5] + cf[0];
	if(r[2] < cf[0])
	r[3] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 536:
// Fitness Information: 93.4776
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = r[1] + r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//if(cf[0] < cf[0])
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = r[5] / -0.0847778;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - cf[0];
	r[3] = cf[0] + cf[0];
}

Program 537:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * cf[0];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[2] = r[2] - r[3];
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[0] < r[1])
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	r[1] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
}

Program 538:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[1] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 539:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	r[2] = r[5] + cf[0];
	//r[4] = r[2] - 0.929871;
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[3] = -0.452209 / -0.0125122;
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
}

Program 540:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[5] = r[0] * -0.222717;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[2] = -0.651855 * cf[0];
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = 0.76886 / r[5];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[2] = r[2] + cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[3] + r[0];
	//r[2] = r[5] + -0.668762;
	//r[2] = r[0] * 0.358704;
	//if(-0.631042 < cf[0])
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	//r[5] = cf[0] * r[0];
	r[1] = -0.476379 * cf[0];
	//r[3] = cf[0] * cf[0];
	r[0] = cf[0] - cf[0];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 541:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 - 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	r[1] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[2] = -0.316528 / r[0];
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 542:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(-0.830872 < cf[0])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[3] = 0.402527 * cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = 0.993225 * -0.258606;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = cf[0] + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = -0.0749512 + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//r[5] = 0.349854 + cf[0];
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
	//if(r[4] < cf[0])
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] + cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] / r[3];
}

Program 543:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 544:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + cf[0];
	//r[2] = r[2] + r[3];
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(-0.85614 < r[1])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] / cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(r[0] < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
	if(cf[0] < 0.569702)
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
}

Program 545:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[2] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] * r[1];
	r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	r[4] = cf[0] + -0.341736;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
	//if(r[4] < cf[0])
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] + cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 546:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = r[3] - cf[0];
	if(r[2] < r[3])
	r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	r[1] = r[1] / 0.270203;
}

Program 547:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[4] = r[2] + 0.399658;
	r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 548:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] / cf[0];
	r[4] = cf[0] + -0.13739;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(0.181396 < cf[0])
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = 0.134399 + -0.13739;
	//if(cf[0] < r[1])
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
}

Program 549:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 550:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * cf[0];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 551:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[5] = r[0] * -0.222717;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[2] = -0.651855 * cf[0];
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = 0.76886 / r[5];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] * r[2];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[5] = r[0] * -0.0813599;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[2] = -0.680969 + cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[3] + r[0];
	//r[2] = r[5] + -0.668762;
	//r[2] = r[0] * 0.358704;
	//r[4] = -0.631042 + cf[0];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	//r[5] = cf[0] * r[0];
	r[1] = -0.476379 * cf[0];
	//r[3] = cf[0] * cf[0];
	r[0] = cf[0] - cf[0];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 552:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	r[1] = r[3] / r[5];
	r[5] = -0.827576 / cf[0];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 553:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[4] = cf[0] - cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	r[1] = r[2] - r[4];
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = 0.802002 - 0.38739;
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[5] = cf[0] - r[3];
}

Program 554:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[1] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 555:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - 0.732971;
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[2] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 556:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[5] = r[0] * -0.222717;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = r[5] + cf[0];
	//r[4] = cf[0] + r[0];
	//r[2] = -0.651855 * cf[0];
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = 0.76886 / r[5];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[2] = r[2] + cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[3] + r[0];
	//r[2] = r[5] + -0.668762;
	//r[2] = r[0] * 0.358704;
	//r[4] = -0.631042 + cf[0];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	//r[5] = cf[0] * r[0];
	r[1] = -0.476379 * cf[0];
	//r[3] = cf[0] * cf[0];
	r[0] = cf[0] - cf[0];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 557:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[1] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.33728 * cf[0];
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[5] = cf[0] + cf[0];
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.286011;
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[1] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	//r[0] = r[2] - cf[0];
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[1] = r[0] / 0.202209;
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
	//if(r[4] < cf[0])
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	r[2] = cf[0] - cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//r[5] = 0.626831 * 0.569702;
	r[2] = cf[0] / cf[0];
	r[3] = r[1] + cf[0];
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(0.975525 < r[5])
	r[5] = cf[0] - r[3];
}

Program 558:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[0] * cf[0];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[1] = r[5] - cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * cf[0];
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[3] = -0.151367 / -0.640259;
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[1] = r[3] + r[0];
	if(-0.829651 < cf[0])
	r[2] = r[0] * 0.358704;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 559:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[5] = r[0] * -0.222717;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[5] = cf[0] * r[3];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(0.808044 < r[1])
	r[1] = -0.0674438 / r[5];
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 560:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[4] = cf[0] - cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	r[0] = -0.38562 / -0.0687866;
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = 0.802002 - 0.38739;
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[5] = cf[0] - r[3];
}

Program 561:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[1] = 0.823975 / cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] - 0.394348;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//r[2] = cf[0] * r[5];
	//if(r[3] < cf[0])
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[3] = 0.644043 - cf[0];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[1] = 0.302002 * r[0];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[0] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] - r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] / 0.247009;
	r[2] = r[0] * 0.358704;
	//if(-0.988831 < -0.992126)
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - r[1];
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	r[1] = 0.499268 - cf[0];
	//r[5] = cf[0] / r[0];
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = r[3] / r[3];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
	//if(r[4] < cf[0])
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(cf[0] < r[5])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 562:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.159119;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(cf[0] < cf[0])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
	//if(r[4] < cf[0])
}

Program 563:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = cf[0] * r[5];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 564:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = -0.582397 / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[5] = cf[0] + cf[0];
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 565:
// Fitness Information: 93.4893
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 566:
// Fitness Information: 93.6256
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(cf[0] < r[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[4] = r[5] + cf[0];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	if(r[1] < 0.0737305)
	r[5] = cf[0] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[3] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//r[0] = r[3] - r[3];
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[4] = r[0] + r[0];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 567:
// Fitness Information: 93.6256
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(cf[0] < r[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[4] = r[5] + cf[0];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	if(r[1] < 0.0737305)
	r[5] = cf[0] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[3] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[4] = r[0] + r[0];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = -0.894958 + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 568:
// Fitness Information: 93.6971
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(0.488159 < r[4])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 569:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] * 0.863708;
	//if(r[1] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[4] = r[3] - -0.9422;
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 570:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	r[0] = -0.191589 / r[3];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] - cf[0];
	r[3] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] * -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = -0.587646 + cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	r[1] = -0.652405 * 0.407227;
	//r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[5] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < r[0])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	if(cf[0] < r[3])
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 571:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[3] = cf[0] - 0.640259;
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 572:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[1] = 0.764709 / r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[0] = cf[0] - cf[0];
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = r[1] - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	//r[0] = -0.291931 + r[1];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	if(-0.157715 < r[2])
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(cf[0] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	r[1] = r[2] - 0.726074;
	r[3] = cf[0] / cf[0];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 573:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 574:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 575:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[4] * r[5];
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] * cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//if(r[0] < -0.535278)
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(cf[0] < r[0])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = 0.0378418 / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 576:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(cf[0] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] - r[3];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[2] = r[0] + 0.735718;
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / cf[0];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] - cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 577:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 578:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[1] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[1] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[4] = r[3] - -0.9422;
	//if(r[5] < -0.663147)
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//r[3] = -0.136658 / 0.205383;
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + -0.0571899;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	if(-0.971436 < cf[0])
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[1] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 579:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	r[0] = -0.191589 / r[3];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] - cf[0];
	r[3] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] * -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = -0.587646 + cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	r[1] = -0.652405 * 0.407227;
	//r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[5] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] / 0.247009;
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - r[1];
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//r[0] = cf[0] * r[4];
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 580:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * cf[0];
	r[1] = 0.757996 + r[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	r[3] = cf[0] * cf[0];
	r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[3] = 0.947876 / r[0];
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
}

Program 581:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[2] = r[4] + 0.108276;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[3] = cf[0] / r[2];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[4] = r[4] - r[3];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[3] = r[1] * -0.713135;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = cf[0] + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[3] = -0.182251 / cf[0];
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[2] = 0.99231 - r[2];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 582:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < -0.420593)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[4] = r[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 583:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	r[1] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] + r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + -0.275574;
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[1] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	if(cf[0] < cf[0])
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[2] = -0.89502 + r[4];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 584:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	r[0] = -0.625916 + cf[0];
	r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] - r[5];
	r[4] = cf[0] - 0.159119;
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 585:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(cf[0] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] - r[3];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[2] = r[0] + 0.735718;
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[5] = cf[0] / r[3];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 586:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = -0.352722 / r[2];
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[5] = r[4] / r[0];
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[3] = r[0] - cf[0];
	//r[4] = r[2] - r[4];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 587:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] - r[5];
	r[4] = cf[0] - 0.159119;
	r[2] = r[4] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + cf[0];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = 0.0378418 / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
}

Program 588:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = 0.283142 * cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = -0.894104 * cf[0];
	//r[5] = 0.914551 - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[3] + r[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[4] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[3] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[5] + r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[1] = -0.47345 - -0.903503;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = cf[0] + cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 589:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(cf[0] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] - r[3];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[2] = r[4] / cf[0];
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[2] = r[0] + 0.735718;
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / cf[0];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 590:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 591:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = 0.744934 / r[1];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = cf[0] - r[4];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//if(r[1] < -0.0890503)
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 592:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[2] = r[2] / 0.823364;
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(0.181396 < cf[0])
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[1] = cf[0] + r[0];
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = 0.134399 + -0.13739;
	//if(cf[0] < r[1])
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
}

Program 593:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = -0.604187 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = cf[0] - r[4];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 594:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[5] = cf[0] - r[3];
}

Program 595:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[3] = r[1] + cf[0];
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 596:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[3] * -0.802002;
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] / 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 597:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] - r[3];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[2] = cf[0] * 0.38855;
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[2] = r[0] + 0.735718;
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / cf[0];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(r[2] < cf[0])
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 598:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = 0.0442505 - cf[0];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 * 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[5] = r[5] + r[5];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	if(0.585144 < r[1])
	r[5] = cf[0] / r[5];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//r[4] = r[4] / r[2];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	if(-0.944275 < cf[0])
	r[5] = cf[0] - r[3];
}

Program 599:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < -0.420593)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = -0.209839 * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 600:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(0.18927 < 0.910522)
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[1] = -0.894226 / r[0];
	//r[5] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[3] = cf[0] - -0.324463;
	//r[3] = cf[0] / cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[5] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[0] = cf[0] - cf[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[0] < cf[0])
	//r[1] = r[3] + r[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(-0.971436 < cf[0])
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[4] = cf[0] + -0.13739;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(cf[0] < r[1])
	r[4] = r[5] - 0.860718;
	r[5] = cf[0] - r[3];
}

Program 601:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[1] = r[2] + r[3];
	//r[4] = cf[0] + 0.678345;
	//r[2] = cf[0] - -0.324463;
	r[4] = 0.72168 + -0.13739;
	//if(cf[0] < r[1])
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[5] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = 0.448608 / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 * r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
}

Program 602:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = 0.283142 * cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = -0.894104 * cf[0];
	//r[5] = 0.914551 - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[3] + r[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[2] = 0.124634 - cf[0];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[4] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//r[2] = r[3] - cf[0];
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = -0.757019 - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[0] = -0.550476 - r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = -0.236572 + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[5] + r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[1] = -0.47345 - -0.903503;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = cf[0] + cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 603:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[1] = 0.674561 - -0.608032;
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//if(-0.542664 < 0.580444)
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//r[5] = 0.626831 * 0.569702;
	//r[4] = r[2] - 0.929871;
	//r[2] = cf[0] * r[5];
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//r[1] = cf[0] - cf[0];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[0] = -0.255493 * r[1];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[5] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//if(cf[0] < r[3])
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 604:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	r[1] = 0.823975 / cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[4])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[5] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[1] / r[4];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//r[2] = cf[0] + r[1];
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] * 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 605:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = -0.846497 + r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[2] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 606:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[5] = 0.209229 * cf[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	if(r[2] < r[4])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 607:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[1] < -0.0890503)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 608:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//if(r[0] < r[3])
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(r[5] < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	//r[4] = r[2] - 0.929871;
	//r[2] = -0.279724 * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] / -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 609:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[1] = 0.674561 - -0.608032;
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[4] = r[5] * cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//if(-0.542664 < 0.580444)
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//r[5] = 0.626831 * 0.569702;
	//r[4] = r[2] - 0.929871;
	//r[2] = cf[0] * r[5];
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//r[1] = cf[0] - cf[0];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[0] = -0.255493 * r[1];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//if(cf[0] < r[3])
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 610:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[0] < r[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[0] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	r[4] = cf[0] + -0.13739;
	r[3] = cf[0] + r[2];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
}

Program 611:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = r[2] - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	r[2] = r[3] / cf[0];
	r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	if(cf[0] < cf[0])
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - cf[0];
	r[2] = -0.279724 * r[5];
}

Program 612:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[0] = r[2] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < r[5])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < r[4])
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 / r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[1] + 0.222229;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = cf[0] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	if(-0.687561 < r[5])
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[5] = r[3] / -0.949524;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 613:
// Fitness Information: 93.7114
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = 0.283142 * cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = -0.894104 * cf[0];
	//r[5] = 0.914551 - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[3] + r[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[4] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//r[2] = r[3] - cf[0];
	//r[5] = r[1] - -0.111511;
	//r[2] = r[5] + cf[0];
	//r[2] = -0.757019 - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = -0.236572 + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[5] + r[3];
	//r[4] = r[2] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[1] = -0.47345 - -0.903503;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = cf[0] + cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 614:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[0] = r[3] / 0.230286;
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + cf[0];
	//r[4] = 0.817993 / -0.48584;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	r[2] = r[0] * 0.358704;
	r[5] = cf[0] - r[3];
}

Program 615:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[3] = -0.713501 - r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 616:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//r[4] = r[4] / r[2];
	//r[1] = r[3] - r[1];
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//if(r[5] < cf[0])
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//r[5] = r[4] - -0.539978;
	//r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	//r[2] = r[5] + cf[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 617:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = -0.607056 - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - 0.162903;
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 / r[1];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.961121)
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * cf[0];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[2] = r[2] - r[3];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 618:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[5] = 0.135254 / cf[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - r[3];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = cf[0] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//r[2] = r[3] + -0.843994;
	r[2] = r[0] * 0.358704;
	if(-0.38562 < -0.0687866)
	r[3] = cf[0] + r[2];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 619:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[5] < -0.674683)
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = 0.807434 - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 * r[1];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[4] = r[1] / 0.0737305;
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[2] = cf[0] * r[5];
	//r[3] = r[3] * r[5];
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 620:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[5] = r[4] * r[5];
	r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] * cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//if(r[0] < -0.535278)
	//if(r[2] < r[3])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[5] = cf[0] - r[3];
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 621:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
}

Program 622:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[4] = 0.437683 + r[3];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[3] = r[4] + r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 623:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = r[1] / 0.877808;
	//if(cf[0] < r[5])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[5] = cf[0] / r[0];
	//r[1] = 0.499268 - cf[0];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.988831 < -0.992126)
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] - r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[3] = r[4] / r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 624:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[3] = cf[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[5] = r[3] + r[2];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 * r[2];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 625:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[1] = cf[0] - cf[0];
	if(r[2] < r[4])
	if(-0.484131 < r[5])
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[1] = 0.920044 + cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	if(cf[0] < r[3])
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	r[0] = -0.52533 * -0.0922852;
	//r[4] = r[5] - 0.159119;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 626:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//if(r[2] < cf[0])
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = r[3] * r[5];
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[3] = 0.63208 / -0.319702;
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[4] = r[5] - -0.171448;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 627:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	r[1] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] + r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + -0.275574;
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[1] = r[2] - 0.820618;
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[2] = r[2] - r[3];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 628:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	r[3] = cf[0] * 0.418152;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] + 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - cf[0];
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 629:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = cf[0] - r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[3] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = r[4] * r[4];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	if(r[3] < 0.489441)
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
}

Program 630:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[5] < -0.674683)
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = 0.807434 - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//r[4] = r[1] / 0.0737305;
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[4] = cf[0] * r[5];
	//r[3] = r[3] * r[5];
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 631:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[0] = cf[0] * cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[1] / 0.957947;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	if(r[2] < r[4])
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 * -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[2] = r[2] - r[3];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 632:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 633:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	r[1] = -0.917358 * r[2];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[5] = cf[0] - r[3];
}

Program 634:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
}

Program 635:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//r[5] = cf[0] / 0.247009;
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	r[5] = r[1] - r[1];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 636:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = -0.361816 / r[3];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] / r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[0] = cf[0] * -0.121399;
	r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	if(-0.119568 < r[0])
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[2];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[0] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + cf[0];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 637:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[5] = cf[0] / cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[3] = cf[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[3] + r[2];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 * r[2];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 638:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[5] < -0.674683)
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + cf[0];
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] * r[2];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 639:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[3] = r[4] / r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 640:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] / r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
}

Program 641:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = cf[0] - cf[0];
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = 0.5354 / 0.978149;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 642:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(-0.830872 < cf[0])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[3] = 0.402527 * cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = 0.993225 * -0.258606;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = cf[0] + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[0] = r[0] * 0.840149;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	r[5] = cf[0] + cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] / r[3];
}

Program 643:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[4] * r[5];
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] * cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[0] < -0.535278)
	//if(r[2] < r[3])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	r[2] = r[0] * 0.358704;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 644:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[5] = r[0] / 0.579468;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//r[2] = r[5] + cf[0];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[3] = r[4] + r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 645:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] / cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[5] = cf[0] - r[3];
}

Program 646:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[1] < -0.0890503)
	r[2] = r[5] + cf[0];
	//if(-0.38562 < r[1])
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[4] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 647:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.848267 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 + r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[5] = cf[0] - r[3];
}

Program 648:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	r[4] = cf[0] + r[3];
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 649:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[5] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + -0.378357;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 * r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = 0.448608 / cf[0];
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[3] * -0.802002;
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[1] = r[3] - cf[0];
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] / 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 650:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//r[2] = -0.0894775 * r[5];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = -0.720947 * r[3];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 - r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] - r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[4] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 651:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = -0.954529 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//if(r[4] < cf[0])
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[3] = cf[0] + cf[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(r[5] < -0.286316)
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = r[2] - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = r[1] * r[5];
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[5] = cf[0] - r[3];
}

Program 652:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 653:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = cf[0] * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//if(-0.235718 < -0.157593)
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] * 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 654:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[4] = 0.537048 + -0.770996;
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[1] = r[5] + r[1];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = -0.761292 - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//r[4] = r[4] + r[1];
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	if(0.99231 < r[3])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[2] = r[2] - r[3];
	//r[3] = r[2] * r[1];
	r[3] = cf[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[3] + r[0];
	if(r[3] < cf[0])
	if(cf[0] < cf[0])
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 * r[2];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 655:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[5] < -0.674683)
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + cf[0];
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[2] = cf[0] * 0.267395;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 656:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = cf[0] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	//if(0.656006 < r[5])
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + cf[0];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 657:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[4] = r[2] / cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] - r[1];
	//if(r[0] < r[5])
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / 0.406555;
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[3] = 0.63208 / -0.319702;
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[4] = r[5] - -0.171448;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 658:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[5];
	r[4] = cf[0] - 0.159119;
	r[2] = r[4] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[1] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 659:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[5] < -0.674683)
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + cf[0];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//if(-0.38562 < -0.0687866)
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 660:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[0] = cf[0] * cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[1] / 0.957947;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 * -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[2] = r[2] - r[3];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 661:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + -0.378357;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[3])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 662:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//if(-0.758789 < cf[0])
	//if(0.524597 < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] / 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[4] = cf[0] * 0.951904;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(0.0647583 < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 663:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * cf[0];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	//r[1] = 0.663452 + cf[0];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[5] = cf[0] - r[3];
}

Program 664:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//if(-0.935425 < r[0])
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[3] = r[4] + r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 665:
// Fitness Information: 93.719
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = cf[0] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(0.382385 < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//if(-0.995667 < cf[0])
	//r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[3] = cf[0] + r[2];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//r[0] = r[2] * cf[0];
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	r[2] = r[2] - r[3];
	r[5] = cf[0] - r[3];
}

Program 666:
// Fitness Information: 94.3477
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.434204 * r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = r[2] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//if(r[5] < r[4])
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[0] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 667:
// Fitness Information: 94.8297
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = r[2] - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] / cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / 0.467407;
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = r[0] * -0.88031;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] / cf[0];
	if(cf[0] < cf[0])
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - cf[0];
	r[2] = -0.279724 * r[5];
}

Program 668:
// Fitness Information: 95.5211
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	r[0] = -0.255493 * r[1];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	r[2] = r[0] * 0.358704;
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 669:
// Fitness Information: 95.5211
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = r[4] - cf[0];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	r[0] = -0.255493 * r[1];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = -0.353638 + r[4];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 670:
// Fitness Information: 95.5211
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 671:
// Fitness Information: 95.7144
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[2] = -0.533936 + cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = -0.247375 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[5] = r[4] / r[0];
}

Program 672:
// Fitness Information: 96.1926
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[5] * cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	if(cf[0] < r[3])
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 673:
// Fitness Information: 98.2463
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	r[2] = r[4] + 0.108276;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	r[3] = cf[0] / r[2];
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	if(cf[0] < 0.569702)
	r[0] = cf[0] - cf[0];
	if(r[2] < r[3])
	r[4] = cf[0] + r[0];
	if(-0.542664 < 0.580444)
	r[4] = 0.72168 + -0.13739;
	r[2] = r[5] + r[4];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(r[3] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] - -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = cf[0] + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[3] = -0.182251 / cf[0];
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[2] = 0.99231 - r[2];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 674:
// Fitness Information: 98.7003
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[4] * r[5];
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] * cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//if(r[0] < -0.535278)
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	r[5] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = 0.0378418 / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//r[0] = r[5] / 0.759521;
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 675:
// Fitness Information: 100.121
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - 0.0268555;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < 0.0959473)
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 676:
// Fitness Information: 100.37
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[1] = cf[0] - cf[0];
	//if(r[2] < r[4])
	//if(-0.484131 < r[5])
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(cf[0] < 0.587036)
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] / r[4];
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 677:
// Fitness Information: 100.728
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//if(r[5] < -0.780334)
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = cf[0] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 678:
// Fitness Information: 100.879
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[1] = -0.917419 * 0.327087;
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[4] = r[1] - cf[0];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(cf[0] < r[5])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < 0.659302)
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 679:
// Fitness Information: 100.939
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[0] = r[5] * r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = r[0] * r[1];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[2] = cf[0] + r[0];
	//if(r[2] < -0.968445)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - -0.532837;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[4] = r[4] + 0.979675;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[1] = 0.455444 + -0.450684;
	//r[2] = -0.757019 - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < -0.929871)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	if(r[0] < 0.771301)
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] * -0.13739;
	r[2] = 0.584106 - -0.992432;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 680:
// Fitness Information: 101.052
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 681:
// Fitness Information: 101.079
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	r[4] = cf[0] + r[3];
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//if(-0.646057 < cf[0])
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 682:
// Fitness Information: 101.08
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.81366;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[1] = r[1] / 0.270203;
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 683:
// Fitness Information: 101.156
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(0.18927 < 0.910522)
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[1] = -0.894226 / r[0];
	//r[5] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[3] = cf[0] / cf[0];
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[5] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[0] = cf[0] - cf[0];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[0] < cf[0])
	//r[1] = r[3] + r[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//if(-0.52533 < -0.0922852)
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//if(-0.971436 < cf[0])
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + -0.0571899;
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[3] = -0.136658 / 0.205383;
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < -0.663147)
	//r[4] = r[3] - -0.9422;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	r[3] = cf[0] - cf[0];
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	r[5] = cf[0] - r[0];
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 684:
// Fitness Information: 101.449
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - cf[0];
	r[1] = r[3] + cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//if(-0.62207 < r[3])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 685:
// Fitness Information: 101.452
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	r[3] = 0.742249 * r[1];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(cf[0] < r[0])
	if(-0.271118 < r[1])
	r[5] = cf[0] * 0.550171;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 686:
// Fitness Information: 101.585
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[4] - 0.898071;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 / 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * r[3];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 + -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / r[1];
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[3] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[5] = r[0] / r[0];
	r[3] = cf[0] / r[0];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < 0.868286)
	//r[4] = cf[0] + cf[0];
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 687:
// Fitness Information: 102.028
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[3] = -0.713501 - r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[3] = -0.937683 - cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 688:
// Fitness Information: 102.238
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[5] = -0.0827637 / r[3];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.363953)
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[3] = r[1] + cf[0];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 689:
// Fitness Information: 102.241
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	//if(0.626831 < 0.569702)
	//if(r[0] < cf[0])
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = r[1] + -0.580627;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 690:
// Fitness Information: 102.822
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[3] = -0.713501 - r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] * 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 691:
// Fitness Information: 103.95
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 692:
// Fitness Information: 104.536
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//if(r[2] < 0.820618)
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[1];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] + -0.803223;
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[3] = cf[0] + r[2];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 693:
// Fitness Information: 104.623
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	r[1] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] + r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + -0.275574;
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	r[5] = 0.626831 * 0.569702;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[1] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[2] = -0.89502 + r[4];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 694:
// Fitness Information: 104.834
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[5] = r[2] + -0.132507;
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[0] = -0.312683 / r[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	r[4] = r[3] - 0.320374;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[0] = 0.161743 - -0.0252075;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	r[5] = r[1] - cf[0];
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 695:
// Fitness Information: 106.864
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//if(cf[0] < r[1])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = 0.386902 * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - r[3];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	r[1] = r[5] / cf[0];
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[1] = -0.493591 * 0.374939;
	r[5] = cf[0] - r[3];
}

Program 696:
// Fitness Information: 111.851
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] / cf[0];
	if(cf[0] < cf[0])
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - cf[0];
	r[2] = -0.279724 * r[5];
}

Program 697:
// Fitness Information: 111.851
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	r[3] = cf[0] + r[2];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//if(-0.995667 < cf[0])
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(0.382385 < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = cf[0] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = 0.649597 * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] + 0.79126;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * r[2];
	r[2] = cf[0] * r[5];
	r[0] = -0.255493 * r[1];
	//if(r[0] < 0.966187)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 698:
// Fitness Information: 113.343
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[1] = r[0] - -0.782349;
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 699:
// Fitness Information: 115.229
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[3] = r[4] / -0.140747;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 700:
// Fitness Information: 115.671
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[3] = r[3] - -0.960571;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	if(0.76886 < r[5])
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 701:
// Fitness Information: 116.984
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[3] = cf[0] + r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 702:
// Fitness Information: 118.238
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = r[5] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = cf[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[0] = r[5] / 0.19281;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 703:
// Fitness Information: 118.919
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//r[0] = 0.537109 * r[1];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[2] = 0.658264 - cf[0];
	//if(-0.947083 < r[0])
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 704:
// Fitness Information: 118.926
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = cf[0] + r[1];
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = -0.94751 - 0.0158081;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] / r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[5] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	r[4] = r[2] - r[0];
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[5] = cf[0] - r[1];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
}

Program 705:
// Fitness Information: 123.344
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[1] = 0.487854 + -0.85907;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = r[2] - r[0];
	//r[5] = cf[0] * cf[0];
	//r[0] = -0.522278 - cf[0];
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[2] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[4] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[1] = cf[0] / cf[0];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = r[2] * 0.372986;
	r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[2] = cf[0] + -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] * r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 706:
// Fitness Information: 123.344
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[5] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = r[2] - r[0];
	//r[5] = cf[0] * cf[0];
	//r[0] = -0.522278 - cf[0];
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[2] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[4] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[1] = cf[0] / cf[0];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = r[2] * 0.372986;
	r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[2] = cf[0] + -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] * r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 707:
// Fitness Information: 125.055
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[2] = r[3] * cf[0];
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	if(r[4] < -0.967407)
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[0] = r[0] * 0.840149;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//if(r[4] < -0.781494)
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] * -0.121399;
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] / 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 708:
// Fitness Information: 125.055
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//if(cf[0] < r[1])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = 0.386902 * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - r[3];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - r[1];
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[5] = -0.337952 * r[1];
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[1] = -0.493591 * 0.374939;
	r[5] = cf[0] - r[3];
}

Program 709:
// Fitness Information: 130.817
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[4] = r[0] + r[3];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.851563 - r[5];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[0] = cf[0] * cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 710:
// Fitness Information: 131.593
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	if(r[2] < cf[0])
	r[2] = cf[0] - cf[0];
	r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[2] = r[5] * r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[0] = 0.970581 + 0.414978;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] * cf[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = cf[0] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 711:
// Fitness Information: 132.46
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] + 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 712:
// Fitness Information: 138.823
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] / r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
}

Program 713:
// Fitness Information: 139.014
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[3] = cf[0] / cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = -0.702026 - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = 0.817993 / -0.48584;
	//r[4] = cf[0] + cf[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 714:
// Fitness Information: 140.296
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[3] = r[3] - -0.960571;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[3] = cf[0] * r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(r[1] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 715:
// Fitness Information: 142.092
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//if(cf[0] < r[0])
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] + cf[0];
	//r[2] = r[0] - r[4];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = 0.131348 - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//r[2] = cf[0] - -0.351074;
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 716:
// Fitness Information: 150.973
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[4] * r[5];
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] * cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//if(r[0] < -0.535278)
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = cf[0] - r[3];
	r[4] = 0.564453 - 0.159119;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = 0.0378418 / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//r[0] = r[5] / 0.759521;
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 717:
// Fitness Information: 151.993
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.851563 - r[5];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = cf[0] / cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / r[1];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[1] = r[1] + cf[0];
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 718:
// Fitness Information: 152.671
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] - cf[0];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = r[0] / 0.202209;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	r[3] = r[4] * r[0];
	r[0] = r[2] - cf[0];
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - 0.732971;
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[1] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[4] = r[4] + -0.564575;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//r[1] = r[2] - r[4];
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[2] = cf[0] * r[5];
	r[5] = cf[0] - r[3];
}

Program 719:
// Fitness Information: 154.251
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[4] * r[5];
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] * cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//if(r[0] < -0.535278)
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	r[4] = 0.72168 + -0.13739;
	//r[1] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = 0.0378418 / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//r[0] = r[5] / 0.759521;
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - cf[0];
}

Program 720:
// Fitness Information: 155.758
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = 0.861694 - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[2] = cf[0] / -0.375244;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] / r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 721:
// Fitness Information: 158.22
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[3] = r[4] + r[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - cf[0];
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 722:
// Fitness Information: 160.082
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(cf[0] < r[5])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 * 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[1] = r[2] - r[4];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * cf[0];
	//r[4] = r[5] / 0.0709229;
	//r[4] = cf[0] - 0.159119;
	//r[5] = 0.274902 - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 723:
// Fitness Information: 160.658
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	r[5] = r[3] - 0.236389;
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 724:
// Fitness Information: 164.241
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(-0.484131 < r[5])
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[1] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	r[2] = -0.933411 * -0.887146;
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 725:
// Fitness Information: 164.692
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	r[1] = cf[0] + r[4];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 726:
// Fitness Information: 168.234
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	if(r[0] < r[0])
	r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[5] = cf[0] - r[3];
	//r[4] = r[2] + r[1];
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(cf[0] < 0.967041)
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - cf[0];
}

Program 727:
// Fitness Information: 171.746
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	r[5] = r[1] + 0.0737305;
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 728:
// Fitness Information: 173.426
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = cf[0] * cf[0];
	//r[0] = cf[0] * r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[4] = cf[0] - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	if(cf[0] < r[5])
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[3] = -0.452209 / -0.0125122;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = 0.468384 + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * cf[0];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 729:
// Fitness Information: 175.413
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	if(r[0] < r[5])
	r[4] = cf[0] - r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = cf[0] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(0.382385 < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[1] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 730:
// Fitness Information: 179.875
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.453979 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] + cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	//r[1] = r[5] / r[5];
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[5] = cf[0] + cf[0];
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[4] = r[2] / r[4];
	r[5] = r[1] - 0.532898;
	//r[1] = r[0] * cf[0];
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	if(0.152283 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] / 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 731:
// Fitness Information: 181.832
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[1] = 0.764709 / r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	r[4] = cf[0] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * cf[0];
	r[2] = cf[0] * r[5];
	if(-0.157715 < r[2])
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	r[1] = r[2] - 0.726074;
	r[3] = cf[0] / cf[0];
	//r[5] = r[4] / r[0];
	//r[4] = -0.034668 * -0.455078;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[1])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 732:
// Fitness Information: 181.87
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = 0.744934 / r[1];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - 0.159119;
	r[2] = r[4] + cf[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = cf[0] - r[4];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 733:
// Fitness Information: 181.87
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[0] = -0.312683 / r[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[4] = cf[0] / r[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 734:
// Fitness Information: 181.87
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	r[4] = -0.276611 - 0.359009;
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 735:
// Fitness Information: 181.87
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[3] = r[1] + -0.491394;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * cf[0];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[3] = cf[0] * cf[0];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[4] = 0.585571 - 0.502014;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(cf[0] < 0.159119)
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[5] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 736:
// Fitness Information: 181.87
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//if(r[0] < r[3])
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	r[4] = 0.72168 + -0.13739;
	//if(r[5] < -0.577881)
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[3] = -0.333801 / -0.0404053;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[0] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] / -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 737:
// Fitness Information: 181.87
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[4] = -0.745544 + cf[0];
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[4] = -0.739319 - -0.674194;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 738:
// Fitness Information: 181.87
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	r[4] = 0.941589 * 0.6604;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < r[3])
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 739:
// Fitness Information: 181.87
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[0] < r[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = r[5] * r[2];
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[0] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[3] = r[5] + 0.337524;
}

Program 740:
// Fitness Information: 181.871
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - r[2];
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[3] = cf[0] + cf[0];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[4] = -0.539795 - r[2];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[0] = r[0] * 0.840149;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 741:
// Fitness Information: 181.871
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[0] = r[5] * r[2];
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = r[0] * r[1];
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * r[3];
	r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - -0.532837;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[4] = r[4] + 0.979675;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[4] = r[4] - 0.518799;
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = -0.757019 - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(cf[0] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < -0.929871)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] * -0.13739;
	r[2] = 0.584106 - -0.992432;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 742:
// Fitness Information: 181.895
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = r[0] * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[1] = r[2] / r[3];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	r[4] = cf[0] / cf[0];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 743:
// Fitness Information: 182.742
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * cf[0];
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[2] = cf[0] * r[4];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < r[0])
	r[1] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	r[0] = -0.38562 + -0.0687866;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 744:
// Fitness Information: 182.975
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	if(cf[0] < r[3])
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[4] = r[4] - cf[0];
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 745:
// Fitness Information: 185.626
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[4] = cf[0] - cf[0];
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	r[3] = cf[0] * 0.418152;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 746:
// Fitness Information: 185.626
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[4] = 0.0252075 - r[4];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.304688 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 747:
// Fitness Information: 185.626
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] + 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 748:
// Fitness Information: 185.626
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	r[3] = cf[0] + r[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[1] = r[2] + r[3];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 749:
// Fitness Information: 185.626
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	r[1] = cf[0] * 0.844604;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = -0.552368 * r[4];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 750:
// Fitness Information: 185.626
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[2] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[4] = -0.471741 / 0.714417;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 751:
// Fitness Information: 185.658
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[4] = cf[0] * -0.13739;
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - cf[0];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 752:
// Fitness Information: 187.353
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//if(r[5] < -0.780334)
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[2] = cf[0] - r[4];
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = cf[0] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 753:
// Fitness Information: 193.075
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[5] < r[5])
	//if(r[2] < cf[0])
	//r[2] = cf[0] - cf[0];
	//r[3] = r[5] - r[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = r[0] / 0.202209;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	if(r[5] < -0.414124)
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[2] = r[5] + cf[0];
	if(r[0] < -0.803223)
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[2] = cf[0] * r[5];
	r[5] = cf[0] - r[3];
}

Program 754:
// Fitness Information: 194.32
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[2] = -0.852844 - cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[0] = cf[0] * r[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] * 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[1] = r[2] * r[4];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] * cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - -0.716736;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 755:
// Fitness Information: 197.455
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = -0.954529 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//if(r[4] < cf[0])
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[3] = cf[0] + cf[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(r[5] < -0.286316)
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = r[2] - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[0] = r[1] * r[5];
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < r[1])
	r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	//if(r[0] < 0.966187)
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 756:
// Fitness Information: 197.683
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[4] = r[2] / -0.807373;
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = -0.776001 + 0.490051;
	r[5] = cf[0] - r[3];
}

Program 757:
// Fitness Information: 197.683
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = cf[0] + cf[0];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(cf[0] < cf[0])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 758:
// Fitness Information: 197.69
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[0] = -0.643066 + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[5] = 0.604492 * r[2];
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 + cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[4] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 759:
// Fitness Information: 197.707
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = r[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[0] = 0.271057 * cf[0];
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[4] = -0.541321 / r[5];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[1] = -0.979004 - cf[0];
	//if(cf[0] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.170105 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[2] = cf[0] - 0.158508;
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(r[4] < r[4])
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 760:
// Fitness Information: 197.711
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[1] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < r[1])
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] / 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.152283 < r[1])
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = r[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[4] = r[2] / r[4];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 761:
// Fitness Information: 197.721
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[4] = r[5] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 762:
// Fitness Information: 197.725
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - cf[0];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = 0.363525 + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[4] = cf[0] + -0.784119;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 763:
// Fitness Information: 198.5
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[1] = r[5] * r[2];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[5] = 0.184265 + r[0];
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] - cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[3] = r[4] / 0.506714;
	//r[1] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	//if(r[4] < cf[0])
}

Program 764:
// Fitness Information: 202.425
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//r[5] = cf[0] / 0.247009;
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[3] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//r[2] = -0.0894775 * r[5];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = -0.720947 * r[3];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.188599;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 765:
// Fitness Information: 203.313
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//if(cf[0] < cf[0])
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[0] = r[3] + r[5];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 766:
// Fitness Information: 205.535
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	r[5] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = 0.141418 + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 767:
// Fitness Information: 209.255
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < r[4])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = -0.607056 - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 / r[1];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	if(cf[0] < 0.961121)
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 768:
// Fitness Information: 209.255
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = -0.607056 - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] * 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//r[5] = 0.808044 / r[1];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	if(cf[0] < 0.961121)
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 769:
// Fitness Information: 214.615
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[3] = cf[0] / -0.97052;
	r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[0] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[0] = cf[0] / 0.83429;
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	r[3] = r[1] / -0.689331;
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 770:
// Fitness Information: 223.835
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	r[4] = 0.72168 + -0.13739;
	//r[1] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[5])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	r[0] = r[1] + cf[0];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 771:
// Fitness Information: 225.474
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[2] = cf[0] + r[4];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[0] = -0.55426 - 0.587219;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = 0.765015 - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 772:
// Fitness Information: 243.198
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[0];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[5] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[4] = r[5] / 0.0709229;
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 773:
// Fitness Information: 246.036
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 774:
// Fitness Information: 255.84
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(0.781128 < r[4])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[2] = -0.0481567 / cf[0];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = 0.239868 + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 775:
// Fitness Information: 256.946
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[4] < -0.992615)
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//if(-0.954834 < cf[0])
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = 0.420898 + r[3];
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 776:
// Fitness Information: 259.085
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = r[0] - -0.803223;
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	r[5] = cf[0] - r[5];
	r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 777:
// Fitness Information: 262.587
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < 0.296936)
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.742676)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[0])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 778:
// Fitness Information: 262.587
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < 0.296936)
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[5] = -0.866028 + cf[0];
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[0])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 779:
// Fitness Information: 265.419
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = cf[0] / r[0];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = 0.537598 * 0.0425415;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * 0.379639;
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 780:
// Fitness Information: 267.275
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[4] = r[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(cf[0] < r[5])
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 * 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[1] = r[2] - r[4];
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = r[0] - -0.803223;
	if(-0.971436 < cf[0])
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//if(-0.52533 < -0.0922852)
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[3] + r[0];
	if(r[0] < cf[0])
	r[2] = r[0] * 0.358704;
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[4] = r[5] / 0.0709229;
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 781:
// Fitness Information: 269.422
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//if(r[3] < r[1])
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] / 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 782:
// Fitness Information: 272.721
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.363953)
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[2] < r[4])
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.69104 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 783:
// Fitness Information: 276.384
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[1] = cf[0] - 0.81366;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[4] = r[5] - 0.159119;
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 784:
// Fitness Information: 278.169
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[2] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	if(cf[0] < r[3])
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] - r[3];
}

Program 785:
// Fitness Information: 284.163
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	if(0.203735 < r[3])
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[1] = cf[0] * r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 786:
// Fitness Information: 292.503
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 787:
// Fitness Information: 293.758
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	r[1] = cf[0] * -0.551147;
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	r[3] = cf[0] / cf[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 788:
// Fitness Information: 299.906
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = r[0] * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	r[1] = r[2] / r[3];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 789:
// Fitness Information: 319.77
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] / r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//if(cf[0] < cf[0])
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = -0.102661 * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 790:
// Fitness Information: 332.13
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[0] = -0.302307 * cf[0];
	//r[3] = -0.191589 / r[3];
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[3] = r[4] * r[4];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - r[4];
	r[1] = cf[0] - cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = 0.765015 - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 791:
// Fitness Information: 335.144
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[5] = r[0] / 0.579468;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	if(0.76886 < r[5])
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//if(-0.542664 < 0.580444)
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	if(-0.255493 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 792:
// Fitness Information: 346.491
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//if(cf[0] < -0.363953)
	//if(-0.947083 < r[0])
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	r[4] = cf[0] - r[1];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 793:
// Fitness Information: 347.813
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 * -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[3] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 794:
// Fitness Information: 348.641
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[4] = 0.861694 - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//if(cf[0] < -0.998291)
	//if(-0.947083 < r[0])
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	r[4] = cf[0] - r[1];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 795:
// Fitness Information: 369.373
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 / 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + r[4];
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[3] = -0.816772 / r[1];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[4];
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[4] * r[1];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	r[5] = cf[0] / 0.247009;
	r[2] = r[0] * 0.358704;
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 796:
// Fitness Information: 371.133
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//if(cf[0] < cf[0])
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	r[5] = cf[0] + r[2];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 797:
// Fitness Information: 388.322
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] / 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[2] = cf[0] + cf[0];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 798:
// Fitness Information: 391.239
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[2] = cf[0] * -0.812317;
	if(r[3] < cf[0])
	r[2] = r[0] * 0.358704;
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 799:
// Fitness Information: 398.381
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = r[1] + r[5];
	r[1] = cf[0] * cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 800:
// Fitness Information: 416.171
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[3] = r[1] + cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] - 0.569702;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	if(cf[0] < cf[0])
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	r[0] = cf[0] / cf[0];
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = cf[0] - cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 801:
// Fitness Information: 427.666
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.00872803;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < r[1])
	r[3] = r[4] / r[2];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 802:
// Fitness Information: 445.709
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 803:
// Fitness Information: 467.309
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] / cf[0];
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[5] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.686829;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * -0.108887;
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 804:
// Fitness Information: 472.233
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//if(r[3] < r[1])
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / 0.296448;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 805:
// Fitness Information: 472.82
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[4] = cf[0] * -0.13739;
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 806:
// Fitness Information: 472.82
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] / -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//if(r[3] < cf[0])
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[1] = r[2] + cf[0];
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 807:
// Fitness Information: 472.82
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[1] = -0.316711 / cf[0];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(0.750488 < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = r[5] * cf[0];
	//r[0] = cf[0] - cf[0];
	//r[4] = r[1] + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[4] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - r[3];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	r[5] = cf[0] - r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[0] = r[3] / 0.320862;
	r[4] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < -0.741089)
	r[4] = cf[0] * -0.13739;
	r[1] = r[2] - 0.726074;
	r[5] = cf[0] - r[3];
}

Program 808:
// Fitness Information: 472.82
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[1] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(cf[0] < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[1] = cf[0] * -0.175293;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 809:
// Fitness Information: 472.82
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[1] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//r[1] = 0.76886 * r[5];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(cf[0] < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 810:
// Fitness Information: 478.082
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(r[2] < 0.949097)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < cf[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = -0.0909424 * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 811:
// Fitness Information: 488.947
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.851563 - r[5];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = cf[0] / cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / r[1];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[5] = cf[0] / r[3];
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 812:
// Fitness Information: 504.278
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[1] = 0.776062 - -0.833923;
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(cf[0] < r[3])
	r[0] = cf[0] - cf[0];
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 813:
// Fitness Information: 538.932
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	r[2] = r[3] / r[0];
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * r[3];
	r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	r[3] = r[2] - cf[0];
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	r[4] = cf[0] - r[1];
	r[5] = cf[0] - r[3];
}

Program 814:
// Fitness Information: 539.138
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	r[2] = r[3] / r[0];
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * r[3];
	r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[1] = r[2] * r[3];
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	r[4] = cf[0] - r[1];
	r[5] = cf[0] - r[3];
}

Program 815:
// Fitness Information: 539.781
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] + 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[1] - r[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] + -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[5] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[1] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[1] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * cf[0];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 816:
// Fitness Information: 542.62
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 817:
// Fitness Information: 545.023
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[0] = r[1] - -0.17926;
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = 0.559937 - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[3] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = 0.250366 - cf[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = r[2] / 0.18457;
	//r[4] = cf[0] - cf[0];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] - -0.0117798;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[5] = r[0] - 0.372253;
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//if(0.163025 < -0.417664)
	//r[0] = -0.52533 * -0.0922852;
	r[0] = -0.255493 * r[1];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	r[4] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	if(cf[0] < r[3])
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//if(-0.20697 < cf[0])
}

Program 818:
// Fitness Information: 586.416
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] - -0.0656128;
	if(r[2] < cf[0])
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//if(cf[0] < -0.363953)
	//if(-0.947083 < r[0])
	//r[2] = cf[0] + r[5];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = -0.444214 * cf[0];
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 - r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 819:
// Fitness Information: 596.85
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] * cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[4] + r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.222107 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	if(r[3] < cf[0])
	r[4] = 0.149597 / 0.250244;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//if(cf[0] < -0.363953)
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 820:
// Fitness Information: 603.13
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	if(cf[0] < cf[0])
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 821:
// Fitness Information: 603.13
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	if(cf[0] < cf[0])
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 822:
// Fitness Information: 603.167
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	if(cf[0] < -0.812317)
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[1] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 823:
// Fitness Information: 618.128
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[3] = -0.452209 / -0.0125122;
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 824:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = cf[0] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	r[0] = cf[0] / r[1];
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[5] = r[4] / r[0];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[0] = -0.643066 + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 825:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	r[5] = cf[0] + cf[0];
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[5] = r[4] / r[0];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = cf[0] * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[0] = -0.643066 + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 826:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[4] = -0.745544 + cf[0];
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[5] = cf[0] - r[3];
	if(cf[0] < r[0])
	if(-0.271118 < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
}

Program 827:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = 0.0442505 - cf[0];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[5] = r[5] + r[5];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[3] = -0.995667 + cf[0];
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//r[5] = r[4] / r[0];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = cf[0] / cf[0];
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//r[5] = r[5] / cf[0];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	if(0.76886 < r[5])
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	//r[4] = 0.99231 + r[3];
	//r[4] = r[4] / r[2];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 828:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = r[3] - 0.0567017;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = 0.0733643 * -0.63739;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[1] = r[0] / -0.116699;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[0] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 829:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[5] = cf[0] - r[5];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 830:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] / cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[2] = -0.255188 / cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	r[4] = 0.72168 + -0.13739;
	//r[3] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.363953)
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[2] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[4] = r[5] * r[5];
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 831:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 832:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 / 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[2] = 0.266296 * r[3];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 833:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = 0.53479 - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - 0.575806;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	r[1] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] / r[1];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + -0.723328;
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[5] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 834:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[1] < -0.0890503)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[1] = cf[0] - 0.756592;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//if(cf[0] < -0.363953)
	//if(-0.947083 < r[0])
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 835:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[2] = r[5] + cf[0];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = r[2] - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] / cf[0];
	if(cf[0] < cf[0])
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - cf[0];
	r[2] = -0.279724 * r[5];
}

Program 836:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[1] < -0.0890503)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 837:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * -0.86554;
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = 0.132935 + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[5] = r[4] / r[0];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[0] = -0.643066 + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 838:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[3] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = r[0] - -0.803223;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 839:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * 0.726563;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[3] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = r[2] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[2] = r[4] / r[5];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = 0.759338 * r[5];
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	if(r[0] < 0.358704)
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
}

Program 840:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - cf[0];
	//r[0] = 0.639038 - r[0];
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	r[4] = r[4] - -0.067749;
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	r[0] = 0.537109 * r[1];
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[2] = 0.658264 - cf[0];
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = 0.652344 * cf[0];
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	if(0.626831 < 0.569702)
	r[4] = r[2] - 0.929871;
	r[5] = cf[0] * r[0];
}

Program 841:
// Fitness Information: 631.406
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = cf[0] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	r[2] = r[5] + cf[0];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = r[1] - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[5] = cf[0] - r[3];
}

Program 842:
// Fitness Information: 631.68
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 843:
// Fitness Information: 645.26
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 844:
// Fitness Information: 692.452
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[5] < r[5])
	//if(r[2] < cf[0])
	//r[2] = cf[0] - cf[0];
	//r[3] = r[5] - r[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = r[0] / 0.202209;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	r[2] = cf[0] * r[5];
	r[5] = cf[0] - r[3];
}

Program 845:
// Fitness Information: 711.348
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(r[0] < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] * -0.121399;
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[3] = cf[0] / r[5];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	r[0] = r[3] + cf[0];
	r[5] = 0.626831 * 0.569702;
	r[2] = r[3] / -0.639526;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.279297;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 846:
// Fitness Information: 725.721
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] - -0.0656128;
	//if(r[2] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - 0.60199;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[3] / cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = 0.677734 * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 847:
// Fitness Information: 733.486
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = 0.247253 - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[4] = 0.976868 - 0.143982;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[4] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(cf[0] < r[5])
	//r[2] = r[0] / cf[0];
	//r[4] = cf[0] + 0.662903;
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	if(0.76886 < r[5])
	if(0.808044 < r[1])
	r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[3] = cf[0] + cf[0];
}

Program 848:
// Fitness Information: 738.185
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[5] = r[1] / cf[0];
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(cf[0] < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = cf[0] - r[3];
}

Program 849:
// Fitness Information: 738.185
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = cf[0] / cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[5] = r[1] / cf[0];
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(cf[0] < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 850:
// Fitness Information: 741.189
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[0] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[4] = 0.403931 + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 851:
// Fitness Information: 748.078
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 852:
// Fitness Information: 748.078
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.511047 * 0.569702;
	//if(r[0] < -0.248474)
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = r[2] / r[4];
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 853:
// Fitness Information: 748.757
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[3] = -0.191589 / r[3];
	r[5] = 0.626831 * 0.569702;
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[1] = r[2] - -0.236572;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 854:
// Fitness Information: 750.013
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = cf[0] + r[1];
	r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] / r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[5] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//r[4] = r[2] - r[0];
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[5] = cf[0] - 0.394348;
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + cf[0];
	//r[2] = r[5] + cf[0];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
}

Program 855:
// Fitness Information: 759.331
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - r[5];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = -0.985596 * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < cf[0])
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 856:
// Fitness Information: 782.729
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[5] = 0.135254 / cf[0];
	//r[0] = cf[0] + 0.79126;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - r[3];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = cf[0] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(0.382385 < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	if(-0.995667 < cf[0])
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[3] = cf[0] + r[2];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 857:
// Fitness Information: 833.908
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = 0.537598 * 0.0425415;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = 0.765015 - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - r[4];
	r[2] = r[5] + cf[0];
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 858:
// Fitness Information: 857.149
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[5] + cf[0];
	if(-0.38562 < r[1])
	r[5] = cf[0] - r[3];
	//r[4] = cf[0] / 0.159119;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//r[1] = r[2] - r[4];
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = cf[0] - r[4];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[4] = r[5] / 0.0709229;
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 859:
// Fitness Information: 914.963
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] * cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[4] + r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	r[0] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 860:
// Fitness Information: 937.154
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] - r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 861:
// Fitness Information: 1037.25
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = 0.537598 * 0.0425415;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[3] = cf[0] / cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(cf[0] < 0.954834)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 862:
// Fitness Information: 1079.09
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	r[5] = r[2] + -0.132507;
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	if(cf[0] < 0.569702)
	r[0] = cf[0] - cf[0];
	if(r[2] < r[3])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	r[2] = r[0] * cf[0];
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	if(-0.177917 < cf[0])
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[5] = cf[0] / r[1];
	r[0] = 0.161743 - -0.0252075;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	r[5] = r[1] - cf[0];
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 863:
// Fitness Information: 1093.64
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[0] = -0.795288 + -0.767761;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 864:
// Fitness Information: 1113
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(cf[0] < cf[0])
	//r[4] = -0.883667 * cf[0];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[4] = cf[0] - r[5];
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - cf[0];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 865:
// Fitness Information: 1114.62
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.851563 - r[5];
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(0.00769043 < -0.288818)
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	r[1] = r[2] - 0.726074;
}

Program 866:
// Fitness Information: 1135.94
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = r[2] - r[0];
	//r[5] = cf[0] * cf[0];
	//r[0] = -0.522278 - cf[0];
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[2] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] - r[3];
	if(cf[0] < r[0])
	if(-0.271118 < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[2] = cf[0] + -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] * r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 867:
// Fitness Information: 1152.34
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] / r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + -0.436829;
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 868:
// Fitness Information: 1218.49
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = cf[0] * 0.24884;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 869:
// Fitness Information: 1218.49
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//r[1] = 0.666321 / r[2];
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 870:
// Fitness Information: 1230.36
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = r[4] - -0.623474;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(cf[0] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 871:
// Fitness Information: 1263.78
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[5] = r[4] + r[2];
	//r[4] = r[2] - r[2];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < r[4])
	//r[0] = cf[0] / cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = r[4] / cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[5] = 0.245911 + -0.846497;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	r[5] = 0.808044 * r[1];
	//if(0.76886 < r[5])
	//r[0] = -0.507446 - 0.126587;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[2] = cf[0] - r[4];
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 872:
// Fitness Information: 1292.94
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[3] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = r[2] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[4] = cf[0] / -0.863953;
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[1] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[2] = r[4] / r[5];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = 0.759338 * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 873:
// Fitness Information: 1383.51
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[4] = -0.243408 + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	//r[2] = cf[0] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] * 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 874:
// Fitness Information: 1397.2
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[4] = r[3] - 0.0567017;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	if(r[0] < r[5])
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + 0.373108;
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	if(r[0] < cf[0])
	if(cf[0] < -0.132507)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[2] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 875:
// Fitness Information: 1397.2
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(cf[0] < r[5])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[5] = cf[0] / r[0];
	//r[1] = 0.499268 - cf[0];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//if(r[2] < 0.443237)
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.988831 < -0.992126)
	//r[2] = r[0] * 0.358704;
	r[5] = cf[0] / 0.247009;
	r[1] = r[0] / cf[0];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 876:
// Fitness Information: 1415.97
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//if(cf[0] < 0.159119)
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	//r[4] = r[5] - 0.159119;
	r[0] = cf[0] + r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[2] = 0.0557251 + -0.217407;
	r[5] = cf[0] - r[3];
}

Program 877:
// Fitness Information: 1438.42
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[3] = -0.673645 - cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[1] = r[0] - r[1];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	//r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[2] = cf[0] - 0.158508;
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(r[4] < r[4])
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[3] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	//r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	r[1] = r[0] / cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 878:
// Fitness Information: 1439.17
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[0] = cf[0] * cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[1] / 0.957947;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	r[1] = r[0] / cf[0];
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[3] = r[4] / r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 879:
// Fitness Information: 1456
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[0] = r[2] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = 0.389099 - 0.227234;
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[5];
	r[4] = cf[0] - 0.159119;
	r[2] = r[4] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = r[1] + 0.928589;
	r[5] = cf[0] - r[3];
}

Program 880:
// Fitness Information: 1603.36
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[0] = cf[0] / r[4];
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(r[3] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] / 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 881:
// Fitness Information: 1728.32
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	r[5] = cf[0] + r[1];
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 882:
// Fitness Information: 1782.44
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[1] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = r[2] - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] * r[5];
	r[5] = 0.386902 * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[0] * -0.88031;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] / cf[0];
	if(cf[0] < cf[0])
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - cf[0];
	r[2] = -0.279724 * r[5];
}

Program 883:
// Fitness Information: 1872.75
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[5] = r[5] + cf[0];
	//r[0] = r[1] + 0.643982;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 884:
// Fitness Information: 1920.7
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 885:
// Fitness Information: 1924.72
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.851563 - r[5];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	r[5] = cf[0] - 0.600708;
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.431763;
	if(r[2] < cf[0])
	r[4] = cf[0] + 0.0584717;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = cf[0] * r[4];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] * 0.159119;
	r[5] = cf[0] - r[3];
}

Program 886:
// Fitness Information: 1925.34
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = r[2] / r[4];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[2] = r[1] + r[1];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 887:
// Fitness Information: 1956.38
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] + 0.752136;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(0.481323 < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(cf[0] < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = -0.371826 * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 888:
// Fitness Information: 1960.84
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[0] = r[5] * -0.597656;
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[2] < r[4])
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 889:
// Fitness Information: 1991.27
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[4] = cf[0] - 0.404724;
	//r[1] = r[3] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[1] = cf[0] * r[3];
	//r[0] = -0.55426 - 0.587219;
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + r[1];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 / 0.587219;
	//if(cf[0] < r[3])
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[3] = cf[0] / r[0];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	r[3] = -0.791016 / 0.383972;
	//if(-0.749939 < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 890:
// Fitness Information: 1993.91
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 891:
// Fitness Information: 2012.47
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[1] = cf[0] * cf[0];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 892:
// Fitness Information: 2033.03
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] + 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[1] - r[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] + -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[5] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(-0.233276 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = cf[0] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * cf[0];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 893:
// Fitness Information: 2033.03
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] + 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[1] - r[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] + -0.781494;
	//r[1] = cf[0] - cf[0];
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[5] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = cf[0] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * cf[0];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 894:
// Fitness Information: 2084.58
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] - -0.0656128;
	//if(r[2] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[3] = r[4] / r[2];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 / r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 895:
// Fitness Information: 2084.69
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[0] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[0] = cf[0] - 0.613037;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	r[4] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 896:
// Fitness Information: 2084.74
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(0.00769043 < -0.288818)
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[1] = -0.843262 * 0.145386;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 897:
// Fitness Information: 2085.38
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[5] = cf[0] + cf[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[5] < r[2])
	//r[0] = cf[0] - cf[0];
	//r[2] = r[3] * r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[2] < r[4])
	r[5] = cf[0] - r[3];
}

Program 898:
// Fitness Information: 2102.45
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[5] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = r[2] - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[4] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//r[5] = cf[0] + 0.569702;
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[1] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 899:
// Fitness Information: 2131.35
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	r[1] = cf[0] + cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	r[1] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 900:
// Fitness Information: 2187.63
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = cf[0] / cf[0];
	r[1] = 0.0165405 - 0.929871;
	r[2] = -0.813232 + 0.733337;
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[5] < r[3])
	r[0] = cf[0] - cf[0];
	if(cf[0] < 0.569702)
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[4] = cf[0] - r[1];
	if(r[0] < r[5])
	if(0.781128 < r[4])
	if(r[3] < cf[0])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 901:
// Fitness Information: 2225.82
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	r[0] = cf[0] + r[0];
	//if(-0.239441 < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 902:
// Fitness Information: 2260.58
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[5] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 903:
// Fitness Information: 2260.58
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	r[2] = r[0] * 0.358704;
	//if(-0.226563 < 0.937561)
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	if(r[5] < r[4])
	if(cf[0] < 0.569702)
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 904:
// Fitness Information: 2260.58
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//r[4] = cf[0] + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[4] = r[2] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[5] = cf[0] - cf[0];
	//r[3] = cf[0] + cf[0];
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 905:
// Fitness Information: 2260.58
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[1] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[3] + r[0];
	//r[4] = cf[0] / 0.82373;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	//r[0] = -0.255493 * r[1];
	//if(0.331238 < r[2])
	//r[0] = 0.99231 - r[2];
	//r[3] = 0.943359 / cf[0];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[0] = r[0] * r[1];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[2] = cf[0] + r[0];
	//if(r[2] < -0.968445)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - -0.532837;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - r[3];
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] + 0.79126;
	//r[5] = 0.135254 / cf[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	if(r[0] < r[5])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < -0.929871)
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
}

Program 906:
// Fitness Information: 2260.58
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[4] = cf[0] - cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[5] = cf[0] - r[3];
}

Program 907:
// Fitness Information: 2260.58
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = r[1] / cf[0];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = r[0] - -0.803223;
	//r[4] = cf[0] + -0.13739;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 908:
// Fitness Information: 2279.09
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.511047 * 0.569702;
	//if(r[0] < -0.248474)
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] / cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 * 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	r[1] = cf[0] + -0.236572;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	if(r[3] < cf[0])
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.998291)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 909:
// Fitness Information: 2301.25
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[2] = cf[0] + cf[0];
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < cf[0])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] + cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[0] = -0.40686 + cf[0];
	r[5] = -0.827576 / cf[0];
	r[1] = r[3] / r[5];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[3] = cf[0] - -0.703552;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 910:
// Fitness Information: 2306.37
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = r[3] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[0] = cf[0] - 0.421326;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 911:
// Fitness Information: 2458.05
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	if(cf[0] < r[3])
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[3] = cf[0] / r[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	if(cf[0] < r[3])
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 912:
// Fitness Information: 2458.34
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[0] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[4] + cf[0];
	r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[2] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] + 0.79126;
	//r[4] = cf[0] + r[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 913:
// Fitness Information: 2523.51
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = r[4] * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//r[2] = r[2] * cf[0];
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 914:
// Fitness Information: 2535.09
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = -0.626953 - cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[0] = 0.648315 - r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 915:
// Fitness Information: 2570.86
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[4] < -0.196594)
	//r[1] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//if(-0.226563 < 0.937561)
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 916:
// Fitness Information: 2644.59
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[5] = r[0] / 0.579468;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[4] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 917:
// Fitness Information: 3091.72
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] / -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = cf[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 918:
// Fitness Information: 3103.3
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 919:
// Fitness Information: 3193.13
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//r[4] = cf[0] - cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[0] * r[3];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	r[0] = r[4] * r[5];
	//r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = 0.802002 - 0.38739;
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[5] = cf[0] - r[3];
}

Program 920:
// Fitness Information: 3598.63
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] + cf[0];
	//r[4] = r[2] - r[2];
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[4] < -0.781494)
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 921:
// Fitness Information: 3641.53
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	r[2] = r[5] + cf[0];
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	r[1] = r[1] / 0.270203;
}

Program 922:
// Fitness Information: 3727.52
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[4] = cf[0] - -0.0656128;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[2] = r[2] * -0.64679;
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = -0.61676 - cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 923:
// Fitness Information: 3750.67
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[4] = cf[0] / 0.633606;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = r[2] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - 0.732971;
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 924:
// Fitness Information: 3895.08
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 925:
// Fitness Information: 3896.78
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - cf[0];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] - r[4];
	//r[2] = r[0] - 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = cf[0] - r[3];
}

Program 926:
// Fitness Information: 3896.78
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//r[4] = cf[0] + 0.935974;
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[1] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	//if(0.808044 < r[1])
	//r[2] = r[4] / cf[0];
	if(cf[0] < r[1])
	r[3] = cf[0] + -0.13739;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < r[1])
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 927:
// Fitness Information: 3902.21
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	if(r[2] < r[3])
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 928:
// Fitness Information: 4040.02
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	r[4] = cf[0] - -0.0656128;
	if(r[2] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	if(r[0] < r[5])
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	if(cf[0] < 0.569702)
	r[0] = cf[0] - cf[0];
	if(r[2] < r[3])
	r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	r[3] = r[4] / r[2];
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 / r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.378357;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 929:
// Fitness Information: 4401.39
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[0] = cf[0] - 0.426819;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 930:
// Fitness Information: 4852.43
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < r[1])
	//r[5] = r[3] * cf[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 931:
// Fitness Information: 5144.89
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	r[1] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] + r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + -0.275574;
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[0] = r[2] + cf[0];
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[1] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[2] = -0.89502 + r[4];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 932:
// Fitness Information: 5211.22
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(-0.752625 < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[1] = r[2] / r[2];
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(-0.239441 < cf[0])
	r[0] = cf[0] + r[0];
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 933:
// Fitness Information: 5467.39
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = r[5] / r[1];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 934:
// Fitness Information: 5621.01
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = cf[0] - 0.404724;
	r[2] = r[5] + cf[0];
	r[0] = cf[0] + r[0];
	r[5] = 0.626831 * 0.569702;
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 935:
// Fitness Information: 6103.24
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	r[0] = cf[0] + r[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(r[3] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//r[2] = r[5] + cf[0];
	r[0] = cf[0] + r[0];
	r[5] = 0.626831 * 0.569702;
	//r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 936:
// Fitness Information: 6107.78
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < -0.844421)
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[4] < -0.334595)
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[2] = r[4] + cf[0];
	r[4] = cf[0] - 0.159119;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	if(r[2] < cf[0])
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(0.488159 < r[4])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//r[2] = r[5] + cf[0];
	r[0] = cf[0] + r[0];
	r[5] = 0.626831 * 0.569702;
	//r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 937:
// Fitness Information: 6112.69
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[3] = r[1] + -0.491394;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * cf[0];
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//if(0.585144 < r[1])
	//r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//r[2] = cf[0] + r[1];
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[3] = r[5] - cf[0];
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[2] = r[1] / r[4];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(r[3] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] - -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//r[2] = r[5] + cf[0];
	r[0] = cf[0] + r[0];
	r[5] = 0.626831 * 0.569702;
	//r[4] = r[2] - 0.929871;
	//r[2] = -0.279724 * r[5];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[5] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 938:
// Fitness Information: 6673.32
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 - r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	if(r[0] < cf[0])
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	if(0.76886 < r[5])
	if(0.808044 < r[1])
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	r[2] = 0.0557251 + -0.217407;
	r[5] = cf[0] - r[3];
}

Program 939:
// Fitness Information: 7080.4
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[5] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 940:
// Fitness Information: 7789.91
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.453979 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] + cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[3] = cf[0] / r[5];
	//r[4] = r[2] - 0.820618;
	r[1] = r[5] / r[5];
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[5];
	r[4] = cf[0] - 0.159119;
	r[2] = r[4] + cf[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[1] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] / 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 941:
// Fitness Information: 8018.36
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[3] < r[3])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	r[3] = r[1] + cf[0];
	r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 942:
// Fitness Information: 8774.27
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = cf[0] - r[3];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//if(r[2] < cf[0])
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[1] = -0.875488 - cf[0];
	//r[1] = r[3] / cf[0];
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < r[1])
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	r[3] = cf[0] + cf[0];
}

Program 943:
// Fitness Information: 9294.01
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[1] = 0.776062 - -0.833923;
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + 0.0640869;
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 944:
// Fitness Information: 10885.1
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[1] = -0.316711 / cf[0];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(0.750488 < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = r[5] * cf[0];
	//r[0] = cf[0] - cf[0];
	//r[4] = r[1] + cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[4] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	r[4] = cf[0] - r[3];
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[5] = cf[0] - r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[0] = r[3] / 0.320862;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	r[2] = r[0] - -0.803223;
	r[5] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < -0.741089)
	r[4] = cf[0] * -0.13739;
	r[1] = r[2] - 0.726074;
	r[5] = cf[0] - r[3];
}

Program 945:
// Fitness Information: 12582.4
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - cf[0];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = 0.431396 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	r[0] = -0.38562 / -0.0687866;
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//if(-0.62207 < r[3])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 946:
// Fitness Information: 12944.6
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[5] = 0.0559692 - cf[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 947:
// Fitness Information: 13238.4
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * cf[0];
	r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	if(cf[0] < r[3])
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	//r[4] = cf[0] - 0.159119;
	r[2] = r[5] + cf[0];
	r[0] = -0.255493 * r[1];
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] - r[3];
}

Program 948:
// Fitness Information: 13914.3
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	r[1] = 0.70929 / r[2];
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	//r[0] = -0.52533 * cf[0];
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[5] = -0.843567 + r[2];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[2] = cf[0] - r[3];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 949:
// Fitness Information: 20912
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(r[4] < -0.201355)
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - r[1];
	//r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[4] = r[5] - 0.159119;
	r[4] = cf[0] * -0.13739;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//r[4] = r[4] / r[2];
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 950:
// Fitness Information: 20938.5
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = r[5] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	if(-0.271118 < r[1])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 951:
// Fitness Information: 21692.6
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	r[0] = r[3] / cf[0];
	if(r[2] < -0.132507)
	r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[4] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	if(r[2] < r[4])
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	r[0] = cf[0] * cf[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	r[5] = -0.387573 * cf[0];
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 952:
// Fitness Information: 22633.8
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] - 0.634766;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] * cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//if(cf[0] < r[3])
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[0] = -0.255493 * r[1];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] / r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = r[1] + r[1];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[0] = cf[0] / r[0];
	r[2] = r[2] + r[3];
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = -0.279724 * r[5];
}

Program 953:
// Fitness Information: 24488.1
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	if(r[2] < cf[0])
	r[2] = cf[0] - cf[0];
	r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.306702 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[0] = 0.970581 + 0.414978;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] * cf[0];
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = cf[0] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 954:
// Fitness Information: 38042.7
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[0] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 955:
// Fitness Information: 40204.1
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//if(r[0] < 0.358704)
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	//if(cf[0] < r[0])
	//if(r[5] < r[1])
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.656006 < r[5])
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = -0.985596 * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < cf[0])
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 956:
// Fitness Information: 63096.8
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] / cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[0] = r[0] * 0.840149;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 957:
// Fitness Information: 75327.3
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	if(r[2] < -0.322021)
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//r[4] = r[5] - 0.159119;
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	//r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[5];
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = r[4] - -0.623474;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 958:
// Fitness Information: 97398.1
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = 0.752625 - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	if(r[3] < cf[0])
	r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 959:
// Fitness Information: 103531
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = -0.582397 / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(cf[0] < -0.23999)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 960:
// Fitness Information: 118434
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < cf[0])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < -0.844421)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 961:
// Fitness Information: 126036
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = r[0] * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	r[3] = 0.889587 / -0.0929565;
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	r[0] = -0.255493 * r[1];
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//if(-0.177917 < cf[0])
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	r[2] = r[0] * cf[0];
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
}

Program 962:
// Fitness Information: 127541
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(r[3] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] - -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	//r[2] = r[5] + cf[0];
	r[0] = cf[0] + r[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 963:
// Fitness Information: 127560
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[3] = 0.791748 / r[3];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(0.512329 < cf[0])
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//if(-0.542664 < 0.580444)
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * cf[0];
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.275024;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 964:
// Fitness Information: 127560
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[1] = r[2] * r[1];
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.546204 / cf[0];
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = cf[0] + r[3];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[1] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	if(r[3] < 0.569702)
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[4] = cf[0] - r[1];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	r[1] = r[2] - -0.236572;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 965:
// Fitness Information: 127570
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = -0.455627 + r[0];
	//r[2] = r[5] / cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[2] = -0.255188 / cf[0];
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	r[2] = cf[0] + r[5];
	if(-0.947083 < r[0])
	if(cf[0] < -0.363953)
	r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[2] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	//if(0.656006 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = r[5] * r[5];
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 966:
// Fitness Information: 127577
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[5] = r[0] / 0.579468;
	if(0.808044 < r[1])
	r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[5] = r[5] - r[0];
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//if(r[2] < cf[0])
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[2] = r[5] + cf[0];
	if(cf[0] < -0.363953)
	if(-0.947083 < r[0])
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + cf[0];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 967:
// Fitness Information: 127824
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.998291)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[1] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	if(r[1] < 0.0737305)
	r[4] = 0.99231 + r[3];
	//if(0.656006 < r[5])
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[3] = -0.713501 - r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[4] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 968:
// Fitness Information: 130858
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	r[1] = cf[0] + -0.0463867;
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[4] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	if(r[3] < 0.464172)
	if(0.76886 < r[5])
	if(0.808044 < r[0])
	r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	r[4] = 0.72168 + -0.13739;
	if(-0.542664 < 0.580444)
	r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	if(cf[0] < 0.569702)
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//r[4] = -0.0792847 + cf[0];
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[3] < cf[0])
	r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[2] = -0.279724 * r[5];
}

Program 969:
// Fitness Information: 131952
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < 0.25708)
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	if(cf[0] < cf[0])
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 970:
// Fitness Information: 137486
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = -0.806702 - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.915955;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * r[4];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(r[0] < 0.966187)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 971:
// Fitness Information: 149123
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[0] = -0.302307 * cf[0];
	//r[3] = -0.191589 / r[3];
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[2] = r[5] + cf[0];
	r[5] = r[1] - -0.930176;
	//r[3] = r[2] + cf[0];
	r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = 0.765015 - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 972:
// Fitness Information: 173634
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	if(r[0] < cf[0])
	if(r[2] < -0.132507)
	r[4] = cf[0] - 0.404724;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 973:
// Fitness Information: 234552
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	if(r[3] < cf[0])
	if(r[2] < cf[0])
	r[5] = cf[0] + cf[0];
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	if(cf[0] < 0.569702)
	r[0] = -0.52533 * -0.0922852;
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 974:
// Fitness Information: 234600
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	if(r[1] < 0.0737305)
	r[1] = 0.0165405 - 0.929871;
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(0.00769043 < -0.288818)
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[0] = r[1] + 0.643982;
	//r[5] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	if(cf[0] < 0.569702)
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 975:
// Fitness Information: 234659
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = -0.603333 - cf[0];
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	if(cf[0] < 0.569702)
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 976:
// Fitness Information: 234688
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	if(cf[0] < 0.569702)
	r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] / -0.279297;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 977:
// Fitness Information: 234694
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	if(r[2] < -0.322021)
	r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//if(r[0] < cf[0])
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//if(-0.542664 < 0.580444)
	//r[4] = cf[0] + r[0];
	//r[0] = 0.024292 * cf[0];
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(r[0] < 0.966187)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 978:
// Fitness Information: 234694
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[0] = cf[0] / r[4];
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//r[4] = r[3] / r[4];
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] + cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 979:
// Fitness Information: 236664
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	//r[0] = -0.255493 * r[1];
	//if(r[3] < r[1])
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[3] = cf[0] + r[2];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[3] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 / r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.413574 < r[2])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + cf[0];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[5] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[5] = cf[0] - r[3];
}

Program 980:
// Fitness Information: 236668
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = 0.756104 * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[3] = cf[0] * cf[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//if(r[4] < -0.781494)
	//if(cf[0] < cf[0])
	//if(0.76886 < 0.651855)
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//if(-0.55426 < r[4])
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[3] - -0.40802;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	//r[2] = 0.972717 / -0.756714;
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[3])
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + 0.903564;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 981:
// Fitness Information: 236704
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = -0.582397 / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	//r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	r[3] = r[1] - -0.0500488;
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(0.00769043 < -0.288818)
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	//if(r[2] < r[1])
	//r[5] = -0.641785 / -0.77832;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 982:
// Fitness Information: 287504
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[5] * cf[0];
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	if(r[2] < r[0])
	if(cf[0] < r[3])
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[1] = r[1] / 0.270203;
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//if(r[5] < r[5])
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 983:
// Fitness Information: 350269
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//r[4] = -0.603333 - cf[0];
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] + cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 984:
// Fitness Information: 488011
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[4] < -0.992615)
	//if(r[2] < -0.132507)
	//if(r[4] < r[2])
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//if(-0.954834 < cf[0])
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	r[1] = cf[0] * cf[0];
	r[5] = r[1] - 0.532898;
	r[2] = r[5] + cf[0];
	r[5] = -0.68512 - -0.930176;
	r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < cf[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	if(0.585144 < r[1])
	r[4] = r[0] + r[5];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 985:
// Fitness Information: 630321
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[3] = r[3] - -0.960571;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.635925 < r[5])
	if(-0.510498 < 0.983032)
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
}

Program 986:
// Fitness Information: 1.24787e+006
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[4] = cf[0] - r[1];
	if(r[2] < r[4])
	r[2] = cf[0] * r[5];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(cf[0] < r[0])
	r[4] = cf[0] + r[0];
	if(r[2] < cf[0])
	r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	if(0.808044 < r[1])
	if(0.656006 < r[5])
	r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	r[2] = cf[0] * r[5];
	r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[0] = cf[0] - r[4];
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[4] = r[5] / 0.0709229;
	//r[4] = cf[0] - 0.159119;
	//r[5] = cf[0] - r[3];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	r[4] = r[2] - 0.820618;
	r[5] = cf[0] * cf[0];
	if(-0.271118 < r[1])
	if(cf[0] < r[0])
	r[5] = cf[0] - r[3];
}

Program 987:
// Fitness Information: 1.33607e+006
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = r[3] + cf[0];
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < -0.322021)
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] + 0.569702;
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	r[3] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + 0.915955;
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//if(r[0] < 0.966187)
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < r[1])
	r[0] = r[2] / 0.0542603;
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 988:
// Fitness Information: 2.68698e+006
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[1] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	//r[1] = r[2] - 0.934692;
	//if(r[1] < 0.0737305)
	//r[1] = r[1] / 0.270203;
	//r[0] = 0.99231 - r[2];
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	r[4] = cf[0] + -0.378357;
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = -0.582397 / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	if(r[1] < 0.0737305)
	r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[0] = cf[0] - cf[0];
	if(cf[0] < 0.569702)
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[1] = r[2] + cf[0];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	//r[4] = r[5] - 0.159119;
	r[4] = 0.0710449 + -0.536438;
}

Program 989:
// Fitness Information: 3.83366e+006
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[5] = r[4] + r[4];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	r[2] = -0.680969 * cf[0];
	r[2] = r[2] - r[3];
	r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[4] = cf[0] - 0.159119;
	r[5] = r[4] / r[0];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[5] = cf[0] - 0.828613;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 990:
// Fitness Information: 1.67596e+007
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[0] = -0.552368 * r[4];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 991:
// Fitness Information: 2.16614e+007
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = r[4] / r[2];
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[1] = cf[0] + -0.880981;
	//if(-0.38562 < -0.0687866)
	//r[5] = cf[0] - r[3];
	//r[4] = cf[0] - 0.159119;
	//r[5] = r[4] / r[0];
	r[0] = -0.255493 * r[1];
	if(r[3] < r[1])
	r[0] = 0.99231 - r[2];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[5] = cf[0] * 0.550171;
	if(r[5] < r[1])
	if(0.974915 < r[0])
	r[3] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	if(0.808044 < r[1])
	if(0.76886 < r[5])
	r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[4] = r[5] - 0.159119;
	r[4] = cf[0] * -0.13739;
	if(r[2] < cf[0])
	if(0.635925 < r[5])
	r[4] = 0.99231 + r[3];
	r[2] = r[2] + r[3];
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//if(r[1] < 0.0737305)
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	//if(-0.38562 < -0.0687866)
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[2] = 0.206177 / cf[0];
}

Program 992:
// Fitness Information: 1.40586e+025
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] - -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[4] = 0.149597 / 0.250244;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	//r[5] = cf[0] * 0.569702;
	//r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	//r[2] = cf[0] * r[5];
	r[3] = -0.222107 / -0.640259;
	//r[2] = 0.206177 / cf[0];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	r[0] = -0.255493 * r[1];
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 993:
// Fitness Information: 1.42424e+025
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[2] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(cf[0] < r[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[4] = r[5] + cf[0];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.726074;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * 0.550171;
	//if(r[5] < r[1])
	//if(cf[0] < r[0])
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//if(cf[0] < r[1])
	//r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//if(0.635925 < r[5])
	//r[4] = 0.99231 + r[3];
	//r[2] = r[2] + r[3];
	//r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	//if(0.585144 < r[1])
	//r[1] = r[1] / 0.270203;
	//if(r[1] < 0.0737305)
	//r[1] = r[2] - 0.934692;
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	if(r[3] < cf[0])
	r[2] = r[0] * 0.358704;
	//if(-0.226563 < 0.937561)
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[5] = cf[0] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	r[2] = cf[0] / cf[0];
	r[3] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	//r[4] = r[0] + r[0];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 994:
// Fitness Information: 2.18185e+026
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[3] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	//r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[2] = cf[0] * -0.812317;
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//if(cf[0] < -0.363953)
	//if(-0.947083 < r[0])
	//r[2] = cf[0] + r[5];
	//r[0] = -0.55426 - 0.587219;
	//r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//r[1] = cf[0] / cf[0];
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(r[3] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	r[4] = cf[0] + -0.13739;
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[3] = 0.947876 / r[0];
	//r[1] = r[3] - 0.59613;
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	//r[5] = -0.55426 - 0.587219;
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] + -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	if(r[2] < r[3])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 995:
// Fitness Information: 2.18185e+026
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[1] = r[3] - 0.59613;
	//r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	//r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	//r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	//r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	//r[2] = 0.99231 - r[2];
	//r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	//r[5] = r[1] - 0.532898;
	//r[1] = cf[0] * cf[0];
	//r[2] = cf[0] + r[5];
	//r[4] = cf[0] - r[5];
	r[1] = 0.0165405 - 0.929871;
	//if(r[1] < 0.0737305)
	//r[5] = r[4] - cf[0];
	//if(0.76886 < r[5])
	//if(0.808044 < r[1])
	//r[0] = r[4] * -0.781494;
	//r[4] = cf[0] - r[1];
	//r[4] = 0.72168 + -0.13739;
	//r[0] = cf[0] - -0.324463;
	//r[4] = cf[0] + r[0];
	//if(r[2] < r[3])
	//r[0] = cf[0] - cf[0];
	//if(cf[0] < 0.569702)
	//r[4] = r[2] - 0.820618;
	//r[5] = cf[0] * cf[0];
	//r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//if(r[3] < cf[0])
	//r[4] = cf[0] - 0.404724;
	//if(r[2] < -0.132507)
	//if(r[0] < cf[0])
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//if(r[3] < 0.0349731)
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[2] = r[2] + r[3];
	r[4] = 0.99231 + r[3];
	//if(0.635925 < r[5])
	//if(0.808044 < r[1])
	//r[2] = r[5] + cf[0];
	if(cf[0] < r[1])
	r[4] = cf[0] + -0.13739;
	if(0.00769043 < -0.288818)
	r[4] = cf[0] + r[0];
	//r[1] = r[2] - 0.934692;
	//r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[5];
	//r[0] = 0.203735 * r[3];
	//r[1] = r[3] - 0.59613;
	r[0] = -0.52533 * -0.0922852;
	//r[2] = r[2] - r[3];
	//r[2] = -0.680969 * cf[0];
	r[4] = r[4] * r[5];
	//r[5] = cf[0] * 0.569702;
	r[1] = r[0] / cf[0];
	//if(r[3] < cf[0])
	//r[2] = r[0] * 0.358704;
	r[2] = cf[0] * r[4];
	//r[3] = -0.151367 / -0.640259;
	r[2] = 0.99231 - r[2];
	r[3] = r[2] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[2] = r[5] + cf[0];
	r[5] = r[1] - 0.532898;
	r[1] = cf[0] * cf[0];
	r[2] = cf[0] + r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[4] = cf[0] * -0.13739;
	//r[5] = cf[0] - 0.394348;
	r[5] = cf[0] - r[3];
}

Program 996:
// Fitness Information: 1.08957e+027
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = 0.752625 - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//if(r[0] < r[5])
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	r[0] = 0.108337 / cf[0];
	//r[4] = cf[0] + r[0];
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	if(cf[0] < r[1])
	r[2] = r[5] + cf[0];
	//if(0.808044 < r[1])
	//r[4] = r[4] / r[2];
	//r[4] = 0.99231 + r[3];
	if(r[1] < 0.0737305)
	r[1] = r[2] - 0.978455;
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[2] = r[0] - -0.803223;
	//r[2] = r[5] + cf[0];
	//r[5] = cf[0] / r[1];
	r[5] = cf[0] - r[3];
	//r[4] = r[5] - 0.159119;
	//r[4] = cf[0] * -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	r[2] = r[5] + cf[0];
	if(-0.38562 < -0.0687866)
	r[5] = cf[0] - r[3];
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 997:
// Fitness Information: 1.49762e+027
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(cf[0] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	if(-0.38562 < -0.0687866)
	r[0] = -0.127014 / cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[2] = cf[0] * r[5];
	//r[2] = cf[0] / cf[0];
	//r[4] = r[2] - 0.820618;
	r[2] = cf[0] * r[5];
	//if(r[2] < r[4])
	//r[4] = cf[0] - r[1];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = r[0] * cf[0];
	//r[4] = cf[0] - 0.404724;
	if(r[2] < -0.132507)
	if(r[0] < cf[0])
	r[5] = 0.626831 * 0.569702;
	r[4] = r[2] - 0.929871;
	r[2] = 0.810974 * r[5];
}

Program 998:
// Fitness Information: 1.59865e+028
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//if(r[0] < cf[0])
	//if(r[2] < -0.132507)
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * cf[0];
	//r[5] = cf[0] + cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[4] < cf[0])
	//r[0] = cf[0] - cf[0];
	//r[0] = cf[0] * -0.121399;
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(cf[0] < cf[0])
	//if(0.76886 < r[5])
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//r[1] = cf[0] * cf[0];
	//r[5] = r[1] - 0.532898;
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[1] = r[0] / cf[0];
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[5] = r[3] / r[2];
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	r[2] = r[2] + r[3];
	//r[4] = 0.99231 + r[3];
	if(0.635925 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < r[0])
	//r[4] = cf[0] + r[0];
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	if(r[1] < 0.0737305)
	r[0] = 0.99231 - r[2];
	if(r[3] < r[1])
	r[0] = -0.255493 * r[1];
	//r[5] = r[4] / r[0];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[3];
	//r[2] = r[2] * cf[0];
	r[2] = r[5] + cf[0];
	r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	if(r[1] < -0.827271)
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}

Program 999:
// Fitness Information: 1.28053e+058
template <class T>
void VUWLGP::Program::Execute(std::vector<T>& r, const std::vector<T>& cf) {
	//r[2] = -0.279724 * r[5];
	//r[4] = r[2] - 0.929871;
	//r[5] = 0.626831 * 0.569702;
	//r[0] = cf[0] + r[0];
	//r[2] = r[5] + cf[0];
	//r[4] = cf[0] - 0.404724;
	//if(r[3] < cf[0])
	//if(r[2] < cf[0])
	//r[4] = cf[0] + -0.13739;
	//r[4] = cf[0] - r[1];
	//if(r[2] < r[4])
	//r[2] = cf[0] * r[5];
	//r[5] = cf[0] * cf[0];
	//r[4] = r[2] - 0.820618;
	//if(r[3] < 0.569702)
	//r[0] = cf[0] - cf[0];
	//if(r[2] < r[3])
	//r[4] = cf[0] + r[0];
	//r[0] = cf[0] - -0.324463;
	//r[4] = 0.72168 + -0.13739;
	r[4] = cf[0] - r[1];
	//r[0] = r[4] * -0.781494;
	//if(0.808044 < r[1])
	//r[1] = cf[0] / cf[0];
	//r[5] = r[4] - cf[0];
	//if(r[1] < 0.0737305)
	//r[1] = 0.0165405 - 0.929871;
	//r[0] = -0.55426 - 0.587219;
	//r[2] = cf[0] + r[5];
	//if(-0.947083 < r[0])
	//if(cf[0] < -0.363953)
	//r[2] = r[5] + cf[0];
	//r[5] = -0.68512 - -0.930176;
	//r[3] = r[2] + cf[0];
	//r[2] = 0.99231 - r[2];
	r[3] = -0.151367 / -0.640259;
	//r[2] = cf[0] * r[4];
	//r[2] = r[0] * 0.358704;
	//if(r[3] < cf[0])
	//r[2] = cf[0] * -0.812317;
	r[5] = cf[0] * 0.569702;
	r[4] = r[4] * r[5];
	//r[2] = -0.680969 * cf[0];
	//r[2] = r[2] - r[3];
	//r[0] = -0.52533 * -0.0922852;
	//r[1] = r[3] - 0.59613;
	r[0] = 0.203735 * r[3];
	r[2] = cf[0] * r[5];
	r[3] = -0.151367 / -0.640259;
	r[1] = r[2] - 0.934692;
	if(r[1] < 0.0737305)
	r[1] = r[1] / 0.270203;
	if(0.585144 < r[1])
	r[5] = cf[0] / r[1];
	//r[2] = r[5] + cf[0];
	//r[2] = r[0] - -0.803223;
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.978455;
	//r[4] = r[1] + 0.0737305;
	//r[4] = 0.99231 + r[3];
	if(0.656006 < r[5])
	if(0.808044 < r[1])
	r[2] = r[5] + cf[0];
	//if(cf[0] < r[1])
	//r[4] = cf[0] + -0.13739;
	if(r[2] < cf[0])
	r[1] = r[0] * -0.0259399;
	if(cf[0] < r[0])
	if(r[5] < r[1])
	r[5] = cf[0] * 0.550171;
	r[4] = r[2] - 0.820618;
	//r[2] = cf[0] / cf[0];
	r[2] = cf[0] * r[5];
	if(r[2] < r[4])
	r[1] = r[2] - 0.726074;
	//if(r[1] < 0.0737305)
	//r[0] = 0.99231 - r[2];
	//if(r[3] < r[1])
	//r[0] = -0.255493 * r[1];
	r[0] = 0.694458 / r[2];
	//r[4] = cf[0] - 0.159119;
	r[5] = cf[0] - r[5];
	if(-0.38562 < -0.0687866)
	r[2] = r[5] + cf[0];
	//r[4] = cf[0] + -0.13739;
	//if(r[2] < cf[0])
	//r[4] = cf[0] * -0.13739;
	r[4] = r[5] - 0.159119;
	r[5] = cf[0] - r[3];
}


